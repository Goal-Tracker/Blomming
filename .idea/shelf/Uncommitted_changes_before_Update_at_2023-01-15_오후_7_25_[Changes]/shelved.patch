Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023-01-02_오후_4_27_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-02_오후_4_27_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-02_오후_4_27_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-02_오후_4_27_[Changes]/shelved.patch	(revision 7bdfde0ce23f04515896a615659fbc49c89b7136)
+++ /dev/null	(revision 7bdfde0ce23f04515896a615659fbc49c89b7136)
@@ -1,921 +0,0 @@
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-12-24__8_01__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-24__8_01__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-24__8_01__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-24__8_01__Changes_.xml	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-+++ /dev/null	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2022-12-24_오전_8_01_[Changes]" date="1671836496732" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-24_오전_8_01_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2022-12-24 오전 8:01 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23__2_02__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23__2_02__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23__2_02__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23__2_02__Changes_.xml	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-+++ /dev/null	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2022-12-23_오후_2_02_[Changes]" date="1671771728083" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23_오후_2_02_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2022-12-23 오후 2:02 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-12-24_오전_8_01_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-24_오전_8_01_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-24_오전_8_01_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-24_오전_8_01_[Changes]/shelved.patch	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-+++ /dev/null	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-@@ -1,98 +0,0 @@
--Index: app/src/main/java/com/example/goaltracker/FriendActivity.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.goaltracker\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Button\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport kotlinx.android.synthetic.main.activity_add_friend.backBtn\r\nimport kotlinx.android.synthetic.main.activity_friend.*\r\n\r\n\r\nclass FriendActivity : AppCompatActivity() {\r\n    // 파이어스토어\r\n    var firestore: FirebaseFirestore? = null\r\n    private val currentUser = Firebase.auth.currentUser?.uid\r\n\r\n    var searchcount = 0 //사람 수\r\n    private lateinit var adapter: FriendAdapter\r\n    private lateinit var accept_adapter: FriendAcceptAdapter\r\n    private lateinit var request_adapter: FriendRequestAdapter\r\n\r\n    private val friend = mutableListOf<Friend>()\r\n    private val friend_accept = mutableListOf<Friend>()\r\n    private val friend_request = mutableListOf<Friend>()\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        setTheme(MySharedPreferences.getTheme(this))\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_friend)\r\n\r\n        // 파이어스토어 인스턴스 초기화\r\n        firestore = FirebaseFirestore.getInstance()\r\n\r\n        //친구 목록\r\n        adapter = FriendAdapter(friend)\r\n        FriendRecyclerView.adapter = adapter\r\n        FriendRecyclerView.layoutManager = LinearLayoutManager(this)\r\n        FriendRecyclerView.setHasFixedSize(true)\r\n\r\n        //친구 신청 수락\r\n        accept_adapter = FriendAcceptAdapter(friend_accept)\r\n        FriendAcceptRecyclerView.adapter = accept_adapter\r\n        FriendAcceptRecyclerView.layoutManager =\r\n            LinearLayoutManager(this).also { it.orientation = LinearLayoutManager.HORIZONTAL } //리사이클러뷰 가로로\r\n        FriendAcceptRecyclerView.setHasFixedSize(true)\r\n\r\n        //친구 신청 취소\r\n        request_adapter = FriendRequestAdapter(friend_request)\r\n        FriendRequestRecyclerView.adapter = request_adapter\r\n        FriendRequestRecyclerView.layoutManager =\r\n            LinearLayoutManager(this).also { it.orientation = LinearLayoutManager.HORIZONTAL } //리사이클러뷰 가로로\r\n        FriendRequestRecyclerView.setHasFixedSize(true)\r\n\r\n\r\n\r\n        //x버튼 누르면 main 화면으로 이동\r\n        backBtn.setOnClickListener {\r\n            startActivity(Intent(this, MainActivity::class.java))\r\n        }\r\n\r\n\r\n        //돋보기 버튼 누르면 친구추가 화면으로 이동\r\n        searchBtn.setOnClickListener {\r\n            startActivity(Intent(this, AddFriendActivity::class.java))\r\n        }\r\n\r\n        //입력칸 누르면 친구추가 화면으로 이동\r\n        search.setOnClickListener {\r\n            startActivity(Intent(this, AddFriendActivity::class.java))\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //친구 수\r\n    fun getCount() {\r\n        var text_count = findViewById<TextView>(R.id.search_friendcount)\r\n        text_count.text = \"\" + searchcount + \"명\"\r\n    }\r\n\r\n    //친구 신청받은 수\r\n    fun getAcCount() {\r\n        var text_count = findViewById<TextView>(R.id.accept_friendcount)\r\n        text_count.text = \"\" + searchcount + \"명\"\r\n    }\r\n\r\n    //친구 신청보낸 수\r\n    fun getReCount() {\r\n        var text_count = findViewById<TextView>(R.id.request_friendcount)\r\n        text_count.text = \"\" + searchcount + \"명\"\r\n    }\r\n\r\n    //친구 신청 수락\r\n    inner class FriendAcceptAdapter(private val context: MutableList<Friend>) :\r\n        RecyclerView.Adapter<FriendAcceptAdapter.ViewHolder>() {\r\n        private var friend_accept = mutableListOf<Friend>()\r\n\r\n        //status가 accept인 것만 불러오기\r\n        init {\r\n            firestore?.collection(\"Account\")?.document(\"$currentUser\")\r\n                ?.collection(\"Friend\")\r\n                ?.whereEqualTo(\"status\", \"accept\")\r\n                ?.addSnapshotListener { querySnapshot, firebaseFirestoreException ->\r\n                    // ArrayList 비워줌\r\n                    friend_accept.clear()\r\n\r\n                    for (snapshot in querySnapshot!!.documents) {\r\n                        var item = snapshot.toObject(Friend::class.java)\r\n                        friend_accept.add(item!!)\r\n                    }\r\n                    searchcount = friend_accept.size\r\n                    getAcCount()\r\n                    accept_adapter.notifyDataSetChanged()\r\n                }\r\n        }\r\n\r\n        // xml파일을 inflate하여 ViewHolder를 생성\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            var view =\r\n                LayoutInflater.from(parent.context)\r\n                    .inflate(R.layout.item_accept_friend, parent, false)\r\n            return ViewHolder(view)\r\n        }\r\n\r\n        // onCreateViewHolder에서 만든 view와 실제 데이터를 연결\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n            var viewHolder = (holder as ViewHolder).itemView\r\n            holder.setFriendAcceptName(friend_accept[position])\r\n            holder.SetFriendAcceptColor(friend_accept[position])\r\n            holder.AcceptBtnOnclick(friend_accept[position])\r\n\r\n\r\n        }\r\n\r\n        inner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {\r\n\r\n            private val AcceptName: TextView = itemView.findViewById(R.id.AcceptName)\r\n            private val AcceptColor: ImageView = itemView.findViewById(R.id.AcceptColor)\r\n            private val AcceptBtn: Button = itemView.findViewById(R.id.AcceptBtn)\r\n\r\n            //친구 이름\r\n            fun setFriendAcceptName(item: Friend) {\r\n                AcceptName.text = item.userName?.get(0).toString()\r\n            }\r\n\r\n            //친구 프로필\r\n            fun SetFriendAcceptColor(item: Friend) {\r\n                var circleResource = 0\r\n                when (item.userColor) {\r\n                    \"#f69b94\" -> circleResource = R.drawable.b_f69b94\r\n                    \"#f8c8c4\" -> circleResource = R.drawable.b_f8c8c4\r\n                    \"#fcdcce\" -> circleResource = R.drawable.b_fcdcce\r\n                    \"#96b0e5\" -> circleResource = R.drawable.b_96b0e5\r\n                    \"#92b9e2\" -> circleResource = R.drawable.b_92b9e2\r\n                    \"#ebc0c7\" -> circleResource = R.drawable.b_ebc0c7\r\n                    \"#7bb6c8\" -> circleResource = R.drawable.b_7bb6c8\r\n                    \"#aad3d7\" -> circleResource = R.drawable.b_aad3d7\r\n                    \"#f5f1f0\" -> circleResource = R.drawable.b_f5f1f0\r\n                    \"#d5e3e6\" -> circleResource = R.drawable.b_d5e3e6\r\n                    \"#f2a4b1\" -> circleResource = R.drawable.b_f2a4b1\r\n                    \"#7175a5\" -> circleResource = R.drawable.b_7175a5\r\n                    \"#a1b3d7\" -> circleResource = R.drawable.b_a1b3d7\r\n                    \"#bd83cf\" -> circleResource = R.drawable.b_bd83cf\r\n                    \"#e5afe9\" -> circleResource = R.drawable.b_e5afe9\r\n\r\n                }\r\n                AcceptColor.setImageResource(circleResource)\r\n            }\r\n\r\n            //친구 수락 버튼\r\n            fun AcceptBtnOnclick(item: Friend) {\r\n                AcceptBtn.setOnClickListener {\r\n                    // 내 친구 목록\r\n                    firestore?.collection(\"Account\")?.document(\"$currentUser\")\r\n                        ?.collection(\"Friend\")\r\n                        ?.document(\"${item.uid}\")\r\n                        ?.update(\"status\", \"friend\")\r\n                        ?.addOnSuccessListener { }\r\n                        ?.addOnFailureListener { }\r\n\r\n                    // 상대방 친구 목록\r\n                    firestore?.collection(\"Account\")?.document(item.uid.toString())\r\n                        ?.collection(\"Friend\")\r\n                        ?.document(\"${currentUser}\")\r\n                        ?.update(\"status\", \"friend\")\r\n                        ?.addOnSuccessListener { }\r\n                        ?.addOnFailureListener { }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // 리사이클러뷰의 아이템 총 개수 반환\r\n        override fun getItemCount() = friend_accept.size\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    //친구 신청 취소\r\n    inner class FriendRequestAdapter(private val context: MutableList<Friend>) :\r\n        RecyclerView.Adapter<FriendRequestAdapter.ViewHolder>() {\r\n        private var friend_request = mutableListOf<Friend>()\r\n\r\n        //status가 request인 것만 불러오기\r\n        init {\r\n            firestore?.collection(\"Account\")?.document(\"$currentUser\")\r\n                ?.collection(\"Friend\")\r\n                ?.whereEqualTo(\"status\", \"request\")\r\n                ?.addSnapshotListener { querySnapshot, firebaseFirestoreException ->\r\n\r\n                    // ArrayList 비워줌\r\n                    friend_request.clear()\r\n\r\n                    for (snapshot in querySnapshot!!.documents) {\r\n                        var item = snapshot.toObject(Friend::class.java)\r\n                        friend_request.add(item!!)\r\n                    }\r\n                    searchcount = friend_request.size\r\n                    getReCount()\r\n                    request_adapter.notifyDataSetChanged()\r\n                }\r\n        }\r\n\r\n        // xml파일을 inflate하여 ViewHolder를 생성\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            var view =\r\n                LayoutInflater.from(parent.context)\r\n                    .inflate(R.layout.item_request_friend, parent, false)\r\n            return ViewHolder(view)\r\n        }\r\n\r\n        // onCreateViewHolder에서 만든 view와 실제 데이터를 연결\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n            var viewHolder = (holder as ViewHolder).itemView\r\n            holder.setFriendRequestName(friend_request[position])\r\n            holder.SetFriendRequestColor(friend_request[position])\r\n            holder.RequestBtnOnclick(friend_request[position])\r\n\r\n\r\n        }\r\n\r\n\r\n        inner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {\r\n\r\n            private val RequestName: TextView = itemView.findViewById(R.id.RequestName)\r\n            private val RequestColor: ImageView = itemView.findViewById(R.id.RequestColor)\r\n            private val RequestBtn: Button = itemView.findViewById(R.id.RequestBtn)\r\n\r\n            //친구 이름\r\n            fun setFriendRequestName(item: Friend) {\r\n                RequestName.text = item.userName?.get(0).toString()\r\n            }\r\n\r\n            //친구 프로필\r\n            fun SetFriendRequestColor(item: Friend) {\r\n                var circleResource = 0\r\n                when (item.userColor) {\r\n                    \"#f69b94\" -> circleResource = R.drawable.b_f69b94\r\n                    \"#f8c8c4\" -> circleResource = R.drawable.b_f8c8c4\r\n                    \"#fcdcce\" -> circleResource = R.drawable.b_fcdcce\r\n                    \"#96b0e5\" -> circleResource = R.drawable.b_96b0e5\r\n                    \"#92b9e2\" -> circleResource = R.drawable.b_92b9e2\r\n                    \"#ebc0c7\" -> circleResource = R.drawable.b_ebc0c7\r\n                    \"#7bb6c8\" -> circleResource = R.drawable.b_7bb6c8\r\n                    \"#aad3d7\" -> circleResource = R.drawable.b_aad3d7\r\n                    \"#f5f1f0\" -> circleResource = R.drawable.b_f5f1f0\r\n                    \"#d5e3e6\" -> circleResource = R.drawable.b_d5e3e6\r\n                    \"#f2a4b1\" -> circleResource = R.drawable.b_f2a4b1\r\n                    \"#7175a5\" -> circleResource = R.drawable.b_7175a5\r\n                    \"#a1b3d7\" -> circleResource = R.drawable.b_a1b3d7\r\n                    \"#bd83cf\" -> circleResource = R.drawable.b_bd83cf\r\n                    \"#e5afe9\" -> circleResource = R.drawable.b_e5afe9\r\n\r\n                }\r\n                RequestColor.setImageResource(circleResource)\r\n            }\r\n\r\n            //친구 신청 취소 버튼\r\n            fun RequestBtnOnclick(item: Friend) {\r\n                RequestBtn.setOnClickListener {\r\n                    // 내 친구 목록\r\n                    firestore?.collection(\"Account\")?.document(\"$currentUser\")\r\n                        ?.collection(\"Friend\")\r\n                        ?.document(\"${item.uid}\")\r\n                        ?.delete()\r\n\r\n                    // 상대방 친구 목록\r\n                    firestore?.collection(\"Account\")?.document(item.uid.toString())\r\n                        ?.collection(\"Friend\")\r\n                        ?.document(\"${currentUser}\")\r\n                        ?.delete()\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        // 리사이클러뷰의 아이템 총 개수 반환\r\n        override fun getItemCount() = friend_request.size\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    //친구 목록\r\n    inner class FriendAdapter(private val context: MutableList<Friend>) :\r\n        RecyclerView.Adapter<FriendAdapter.ViewHolder>() {\r\n        private var friend = mutableListOf<Friend>()\r\n\r\n        //status가 friend인 것만 불러오기\r\n        init {\r\n            firestore?.collection(\"Account\")?.document(\"$currentUser\")\r\n                ?.collection(\"Friend\")\r\n                ?.whereEqualTo(\"status\", \"friend\")\r\n                ?.addSnapshotListener { querySnapshot, firebaseFirestoreException ->\r\n                    // ArrayList 비워줌\r\n                    friend.clear()\r\n\r\n                    for (snapshot in querySnapshot!!.documents) {\r\n                        var item = snapshot.toObject(Friend::class.java)\r\n                        friend.add(item!!)\r\n                    }\r\n                    searchcount = friend.size\r\n                    getCount()\r\n                    adapter.notifyDataSetChanged()\r\n                }\r\n        }\r\n\r\n        // xml파일을 inflate하여 ViewHolder를 생성\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ViewHolder {\r\n            var view =\r\n                LayoutInflater.from(parent.context)\r\n                    .inflate(R.layout.item_friend, parent, false)\r\n            return ViewHolder(view)\r\n        }\r\n\r\n        // onCreateViewHolder에서 만든 view와 실제 데이터를 연결\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n            var viewHolder = (holder as ViewHolder).itemView\r\n            holder.setFriendName(friend[position])\r\n            holder.setProfileName(friend[position])\r\n            holder.SetFriendColor(friend[position])\r\n            holder.SetFriendEmail(friend[position])\r\n\r\n\r\n        }\r\n\r\n        inner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {\r\n\r\n            private val FriendName: TextView = itemView.findViewById(R.id.FriendName)\r\n            private val FriendProfileName: TextView = itemView.findViewById(R.id.FriendProfileName)\r\n            private val FriendEmail: TextView = itemView.findViewById(R.id.FriendEmail)\r\n            private val FriendColor: ImageView = itemView.findViewById(R.id.FriendColor)\r\n\r\n\r\n            //친구 이름\r\n            fun setFriendName(item: Friend){\r\n                FriendName.text = item.userName\r\n            }\r\n\r\n            //친구 프로필 이름\r\n            fun setProfileName(item: Friend){\r\n                FriendProfileName.text = item.userName?.get(0).toString()\r\n            }\r\n\r\n            //친구 프로필\r\n            fun SetFriendColor(item:Friend){\r\n                var circleResource = 0\r\n                when (item.userColor) {\r\n                    \"#f69b94\" -> circleResource = R.drawable.b_f69b94\r\n                    \"#f8c8c4\" -> circleResource = R.drawable.b_f8c8c4\r\n                    \"#fcdcce\" -> circleResource = R.drawable.b_fcdcce\r\n                    \"#96b0e5\" -> circleResource = R.drawable.b_96b0e5\r\n                    \"#92b9e2\" -> circleResource = R.drawable.b_92b9e2\r\n                    \"#ebc0c7\" -> circleResource = R.drawable.b_ebc0c7\r\n                    \"#7bb6c8\" -> circleResource = R.drawable.b_7bb6c8\r\n                    \"#aad3d7\" -> circleResource = R.drawable.b_aad3d7\r\n                    \"#f5f1f0\" -> circleResource = R.drawable.b_f5f1f0\r\n                    \"#d5e3e6\" -> circleResource = R.drawable.b_d5e3e6\r\n                    \"#f2a4b1\" -> circleResource = R.drawable.b_f2a4b1\r\n                    \"#7175a5\" -> circleResource = R.drawable.b_7175a5\r\n                    \"#a1b3d7\" -> circleResource = R.drawable.b_a1b3d7\r\n                    \"#bd83cf\" -> circleResource = R.drawable.b_bd83cf\r\n                    \"#e5afe9\" -> circleResource = R.drawable.b_e5afe9\r\n\r\n                }\r\n                FriendColor.setImageResource(circleResource)\r\n            }\r\n\r\n            //친구 이메일\r\n            fun SetFriendEmail(item:Friend){\r\n                FriendEmail.text = item.email\r\n            }\r\n        }\r\n\r\n        // 리사이클러뷰의 아이템 총 개수 반환\r\n        override fun getItemCount() = friend.size\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/goaltracker/FriendActivity.kt b/app/src/main/java/com/example/goaltracker/FriendActivity.kt
----- a/app/src/main/java/com/example/goaltracker/FriendActivity.kt	(revision dca195999894630f54b9d53ddd69e38adaa6f157)
--+++ b/app/src/main/java/com/example/goaltracker/FriendActivity.kt	(date 1671835877720)
--@@ -1,14 +1,19 @@
-- package com.example.goaltracker
-- 
--+import android.content.Context
-- import android.content.Intent
--+import android.graphics.Color
--+import android.graphics.drawable.ColorDrawable
-- import android.os.Bundle
-- import android.util.Log
-- import android.view.LayoutInflater
-- import android.view.View
-- import android.view.ViewGroup
--+import android.view.Window
-- import android.widget.Button
-- import android.widget.ImageView
-- import android.widget.TextView
--+import android.widget.Toast
-- import androidx.appcompat.app.AppCompatActivity
-- import androidx.recyclerview.widget.LinearLayoutManager
-- import androidx.recyclerview.widget.RecyclerView
--@@ -24,6 +29,7 @@
--     var firestore: FirebaseFirestore? = null
--     private val currentUser = Firebase.auth.currentUser?.uid
-- 
--+    private lateinit var dialog: DeleteDialog  //다이얼로그
--     var searchcount = 0 //사람 수
--     private lateinit var adapter: FriendAdapter
--     private lateinit var accept_adapter: FriendAcceptAdapter
--@@ -358,7 +364,12 @@
--             holder.SetFriendColor(friend[position])
--             holder.SetFriendEmail(friend[position])
-- 
--+            var account = friend[position]
-- 
--+            //아이템을 클릭하면 다이얼로그 생성
--+            holder.itemView.setOnClickListener {
--+                delDialog(it.context, account)
--+            }
--         }
-- 
--         inner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {
--@@ -412,6 +423,46 @@
--         // 리사이클러뷰의 아이템 총 개수 반환
--         override fun getItemCount() = friend.size
-- 
--+    }
--+
--+
--+    fun delDialog(context: Context, item: Friend) {
--+
--+        dialog = DeleteDialog(
--+            context = context,
--+            userName = item.userName,
--+            uid = item.uid,
--+            email = item.email!!,
--+            deletebtnListener = deletebtnListener
--+        )
--+
--+        //다이얼로그 타이틀 및 테두리 없애기
--+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)
--+        dialog.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))
--+        dialog.show()
--+    }
--+
--+    //삭제 버튼 클릭 시
--+    private val deletebtnListener = View.OnClickListener {
--+        firestore?.collection("Account")
--+            ?.document("$currentUser")
--+            ?.collection("Friend")
--+            ?.document("${dialog.uid}")
--+            ?.delete()
--+            ?.addOnSuccessListener {
--+                Toast.makeText(this@FriendActivity, "친구를 삭제했습니다.", Toast.LENGTH_SHORT).show()
--+            }
--+            ?.addOnFailureListener { }
--+
--+        firestore?.collection("Account")
--+            ?.document(dialog.uid.toString())
--+            ?.collection("Friend")
--+            ?.document("${currentUser}")
--+            ?.delete()
--+            ?.addOnSuccessListener { }
--+            ?.addOnFailureListener { }
--+
--+
--     }
-- }
-- 
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23_오후_3_05_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23_오후_3_05_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23_오후_3_05_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23_오후_3_05_[Changes]/shelved.patch	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-+++ /dev/null	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-@@ -1,137 +0,0 @@
--Index: app/src/main/java/com/example/goaltracker/AddFriendActivity.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.goaltracker\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.ColorDrawable\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.view.Window\r\nimport android.widget.Button\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport kotlinx.android.synthetic.main.activity_add_friend.searchWord\r\nimport kotlinx.android.synthetic.main.activity_add_friend.*\r\nimport kotlinx.android.synthetic.main.item_friend_add.*\r\nimport kotlinx.android.synthetic.main.report_dialog.*\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\n\r\nclass AddFriendActivity : AppCompatActivity() {\r\n    //파이어스토어\r\n    var firestore: FirebaseFirestore? = null\r\n    private val currentUser = Firebase.auth.currentUser?.uid\r\n\r\n    var searchcount = 0  //사람 수\r\n    private lateinit var dialog: ReportDialog  //다이얼로그\r\n    lateinit var index: String\r\n    lateinit var msgindex: String\r\n    var indexname : String? = null\r\n    var indexemail : String? = null\r\n    var indexcolor : String? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        setTheme(MySharedPreferences.getTheme(this))\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_add_friend)\r\n\r\n        searchWord.addTextChangedListener(object : TextWatcher {\r\n\r\n            //텍스트가 변경되기 바로 이전에 동작\r\n            override fun beforeTextChanged(charSequence: CharSequence, i: Int, i1: Int, i2: Int) {}\r\n\r\n            //텍스트가 변경되는 동시에 동작\r\n            override fun onTextChanged(charSequence: CharSequence, i: Int, i1: Int, i2: Int) {}\r\n\r\n            // 텍스트가 변경된 이후에 동작\r\n            override fun afterTextChanged(editable: Editable) {\r\n                // input창에 문자를 입력할때마다 호출된다.\r\n                // search 메소드를 호출한다.\r\n                (FriendAddRecyclerView.adapter as RecyclerViewAdapter).search(searchWord.text.toString())\r\n            }\r\n        })\r\n\r\n        // 파이어스토어 인스턴스 초기화\r\n        firestore = FirebaseFirestore.getInstance()\r\n\r\n        FriendAddRecyclerView.adapter = RecyclerViewAdapter()\r\n        FriendAddRecyclerView.layoutManager = LinearLayoutManager(this)\r\n\r\n\r\n        //x버튼 누르면 main 화면으로 이동\r\n        backBtn.setOnClickListener {\r\n            startActivity(Intent(this, FriendActivity::class.java))\r\n        }\r\n\r\n\r\n        // 검색 옵션에 따라 검색\r\n        searchBtn.setOnClickListener {\r\n            (FriendAddRecyclerView.adapter as RecyclerViewAdapter).search(searchWord.text.toString())\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //인원 카운트\r\n    fun getCount() {\r\n        var text_count = findViewById<TextView>(R.id.search_count)\r\n        text_count.text = \"\" + searchcount + \"명\"\r\n    }\r\n\r\n\r\n    inner class RecyclerViewAdapter : RecyclerView.Adapter<RecyclerView.ViewHolder>() {\r\n        // Friend 클래스 ArrayList 생성성\r\n        var friend_add: ArrayList<Friend> = arrayListOf()\r\n\r\n        init {  // Account의 문서를 불러온 뒤 Friend으로 변환해 ArrayList에 담음\r\n            firestore?.collection(\"Account\")\r\n                ?.addSnapshotListener { querySnapshot, firebaseFirestoreException ->\r\n                    // ArrayList 비워줌\r\n                    friend_add.clear()\r\n\r\n                    for (snapshot in querySnapshot!!.documents) {\r\n                        var item = snapshot.toObject(Friend::class.java)\r\n                        friend_add.add(item!!)\r\n                    }\r\n\r\n\r\n                    notifyDataSetChanged()\r\n                }\r\n\r\n        }\r\n\r\n        // xml파일을 inflate하여 ViewHolder를 생성\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {\r\n            var view =\r\n                LayoutInflater.from(parent.context).inflate(R.layout.item_friend_add, parent, false)\r\n            return ViewHolder(view)\r\n        }\r\n\r\n        // onCreateViewHolder에서 만든 view와 실제 데이터를 연결\r\n        override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {\r\n            var viewHolder = (holder as ViewHolder).itemView\r\n            holder.SetFriendAddName(friend_add[position])\r\n            holder.SetFriendUid(friend_add[position])\r\n            holder.SetProfileAddName(friend_add[position])\r\n            holder.AddFriendBtnOnclick(friend_add[position])\r\n            holder.SetFriendAddColor(friend_add[position])\r\n            holder.SetFriendAddEmail(friend_add[position])\r\n\r\n            var account = friend_add[position]\r\n\r\n            //아이템을 클릭하면 다이얼로그 생성\r\n            holder.itemView.setOnClickListener {\r\n                callDialog(it.context, account)\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        inner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {\r\n\r\n            private val AddName: TextView = itemView.findViewById(R.id.AddName)\r\n            private val Adduid: TextView = itemView.findViewById(R.id.Adduid)\r\n            private val ProfileName: TextView = itemView.findViewById(R.id.AddProfileName)\r\n            private val AddEmail: TextView = itemView.findViewById(R.id.AddEmail)\r\n            private val AddColor: ImageView = itemView.findViewById(R.id.AddColor)\r\n            private val AddBtn: Button = itemView.findViewById(R.id.AddBtn)\r\n\r\n            //친구 추가 이름\r\n            fun SetFriendAddName(item: Friend) {\r\n                AddName.text = item.userName\r\n            }\r\n\r\n            //친구 uid\r\n            fun SetFriendUid(item: Friend) {\r\n                Adduid.text = item.uid\r\n            }\r\n\r\n            //친구 프로필 이름\r\n            fun SetProfileAddName(item: Friend) {\r\n                ProfileName.text = item.userName?.get(0).toString()\r\n            }\r\n\r\n            //친구 추가 프로필\r\n            fun SetFriendAddColor(item: Friend) {\r\n                var circleResource = 0\r\n                when (item.userColor) {\r\n                    \"#f69b94\" -> circleResource = R.drawable.b_f69b94\r\n                    \"#f8c8c4\" -> circleResource = R.drawable.b_f8c8c4\r\n                    \"#fcdcce\" -> circleResource = R.drawable.b_fcdcce\r\n                    \"#96b0e5\" -> circleResource = R.drawable.b_96b0e5\r\n                    \"#92b9e2\" -> circleResource = R.drawable.b_92b9e2\r\n                    \"#ebc0c7\" -> circleResource = R.drawable.b_ebc0c7\r\n                    \"#7bb6c8\" -> circleResource = R.drawable.b_7bb6c8\r\n                    \"#aad3d7\" -> circleResource = R.drawable.b_aad3d7\r\n                    \"#f5f1f0\" -> circleResource = R.drawable.b_f5f1f0\r\n                    \"#d5e3e6\" -> circleResource = R.drawable.b_d5e3e6\r\n                    \"#f2a4b1\" -> circleResource = R.drawable.b_f2a4b1\r\n                    \"#7175a5\" -> circleResource = R.drawable.b_7175a5\r\n                    \"#a1b3d7\" -> circleResource = R.drawable.b_a1b3d7\r\n                    \"#bd83cf\" -> circleResource = R.drawable.b_bd83cf\r\n                    \"#e5afe9\" -> circleResource = R.drawable.b_e5afe9\r\n\r\n                }\r\n                AddColor.setImageResource(circleResource)\r\n            }\r\n\r\n            //친구 추가 이메일\r\n            fun SetFriendAddEmail(item: Friend) {\r\n                AddEmail.text = item.email\r\n            }\r\n\r\n            //친구 추가 버튼\r\n            @SuppressLint(\"SuspiciousIndentation\")\r\n            fun AddFriendBtnOnclick(item: Friend) {\r\n                AddBtn.setOnClickListener {\r\n                    if (item.uid != currentUser) {\r\n                        firestore?.collection(\"Account\")?.document(\"$currentUser\")?.get()\r\n                            ?.addOnSuccessListener { document ->\r\n                                if (document != null) {\r\n                                    // 현재 사용자 이름이랑 이메일, 색상 받아오기\r\n                                    indexname = document.data?.get(\"userName\").toString()\r\n                                    indexemail = document.data?.get(\"email\").toString()\r\n                                    indexcolor = document.data?.get(\"userColor\").toString()\r\n                                }\r\n\r\n                                firestore?.collection(\"Account\")?.document(\"$currentUser\")\r\n                                    ?.collection(\"Friend\")\r\n                                    ?.whereEqualTo(\"uid\", item.uid.toString())?.get()\r\n                                    ?.addOnCompleteListener { task ->\r\n\r\n\r\n                                        // 친구 리스트가 없는 경우\r\n                                        if (task.result?.size() == 0) {\r\n                                            // 내 친구 목록\r\n                                            firestore?.collection(\"Account\")\r\n                                                ?.document(\"$currentUser\")\r\n                                                ?.collection(\"Friend\")\r\n                                                ?.document(\"${item.uid}\")\r\n                                                ?.set(\r\n                                                    hashMapOf(\r\n                                                        \"uid\" to item.uid,\r\n                                                        \"status\" to \"request\",\r\n                                                        \"userName\" to item.userName,\r\n                                                        \"email\" to item.email,\r\n                                                        \"userColor\" to item.userColor\r\n\r\n                                                    )\r\n                                                )\r\n                                                ?.addOnSuccessListener {\r\n                                                    Toast.makeText(\r\n                                                        this@AddFriendActivity,\r\n                                                        \"친구 신청을 보냈습니다.\",\r\n                                                        Toast.LENGTH_SHORT\r\n                                                    ).show()\r\n\r\n                                                }\r\n                                                ?.addOnFailureListener {}\r\n\r\n                                            // 상대방 친구 목록\r\n                                            firestore?.collection(\"Account\")\r\n                                                ?.document(item.uid.toString())\r\n                                                ?.collection(\"Friend\")\r\n                                                ?.document(\"${currentUser}\")\r\n                                                ?.set(\r\n                                                    hashMapOf(\r\n                                                        \"uid\" to currentUser,\r\n                                                        \"status\" to \"accept\",\r\n                                                        \"userName\" to indexname,\r\n                                                        \"email\" to indexemail,\r\n                                                        \"userColor\" to indexcolor\r\n\r\n                                                    )\r\n                                                )\r\n                                                ?.addOnSuccessListener {\r\n                                                }\r\n                                                ?.addOnFailureListener {\r\n                                                }\r\n\r\n                                        }\r\n\r\n                                        // 친구 리스트가 있는 경우\r\n                                        else {\r\n                                            var notFriend = true\r\n                                            // 이미 친구임\r\n                                            firestore?.collection(\"Account\")\r\n                                                ?.document(\"$currentUser\")\r\n                                                ?.collection(\"Friend\")\r\n                                                ?.document(\"${item.uid}\")?.get()\r\n                                                ?.addOnSuccessListener { document ->\r\n                                                    if (document != null) {\r\n                                                        Toast.makeText(\r\n                                                            this@AddFriendActivity,\r\n                                                            \"이미 친구입니다.\",\r\n                                                            Toast.LENGTH_SHORT\r\n                                                        ).show()\r\n                                                        notFriend = false\r\n\r\n                                                    }\r\n\r\n                                                    if (notFriend) {\r\n                                                        // 내 친구 목록\r\n                                                        firestore?.collection(\"Account\")\r\n                                                            ?.document(\"$currentUser\")\r\n                                                            ?.collection(\"Friend\")\r\n                                                            ?.document(\"${item.uid}\")\r\n                                                            ?.set(\r\n                                                                hashMapOf(\r\n                                                                    \"uid\" to item.uid,\r\n                                                                    \"status\" to \"request\",\r\n                                                                    \"userName\" to item.userName,\r\n                                                                    \"email\" to item.email,\r\n                                                                    \"userColor\" to item.userColor\r\n\r\n                                                                )\r\n                                                            )\r\n                                                            ?.addOnSuccessListener {\r\n                                                                Toast.makeText(\r\n                                                                    this@AddFriendActivity,\r\n                                                                    \"친구 신청을 보냈습니다.\",\r\n                                                                    Toast.LENGTH_SHORT\r\n                                                                ).show()\r\n\r\n                                                            }\r\n                                                            ?.addOnFailureListener {}\r\n\r\n                                                        // 상대방 친구 목록\r\n                                                        firestore?.collection(\"Account\")\r\n                                                            ?.document(item.uid.toString())\r\n                                                            ?.collection(\"Friend\")\r\n                                                            ?.document(\"${currentUser}\")\r\n                                                            ?.set(\r\n                                                                hashMapOf(\r\n                                                                    \"uid\" to currentUser,\r\n                                                                    \"status\" to \"accept\",\r\n                                                                    \"userName\" to indexname,\r\n                                                                    \"email\" to indexemail,\r\n                                                                    \"userColor\" to indexcolor\r\n\r\n                                                                )\r\n                                                            )\r\n                                                            ?.addOnSuccessListener {\r\n                                                            }\r\n                                                            ?.addOnFailureListener {\r\n                                                            }\r\n\r\n                                                    }\r\n                                                }\r\n\r\n                                        }\r\n                                    }\r\n                            }\r\n                    } else {\r\n                        Toast.makeText(\r\n                            this@AddFriendActivity,\r\n                            \"자기자신을 친구로 추가할 수 없습니다.\", Toast.LENGTH_SHORT\r\n                        ).show()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // 리사이클러뷰의 아이템 총 개수 반환\r\n        override fun getItemCount(): Int {\r\n            return friend_add.size\r\n        }\r\n\r\n        //관리자(신고)Dialog\r\n        fun callDialog(context: Context, item: Friend) {\r\n\r\n            dialog = ReportDialog(\r\n                context = context,\r\n                userColor = item.userColor,\r\n                userName = item.userName,\r\n                uid = item.uid,\r\n                userMessage = item.userMessage,\r\n                email = item.email!!,\r\n                namebtnListener = reNameListener,\r\n                messagebtnListener = reMessageListener,\r\n                blockbtnListener = blockbtnListener\r\n            )\r\n\r\n            //다이얼로그 타이틀 및 테두리 없애기\r\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n            dialog.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\r\n            dialog.show()\r\n        }\r\n\r\n        //닉네임 신고 버튼 클릭 시\r\n        private val reNameListener = View.OnClickListener {\r\n            index = UUID.randomUUID().toString()\r\n            firestore?.collection(\"Manager\")?.document(\"$index\")\r\n                ?.set(\r\n                    hashMapOf(\r\n                        \"userName\" to dialog.userName,\r\n                        \"email\" to dialog.email,\r\n                        \"index\" to index,\r\n                        \"id\" to dialog.uid,\r\n                        )\r\n                )\r\n\r\n            Toast.makeText(\r\n                this@AddFriendActivity,\r\n                \"닉네임 신고가 되었습니다.\",\r\n                Toast.LENGTH_SHORT\r\n            ).show()\r\n        }\r\n\r\n\r\n        //상태 메세지 신고 버튼 클릭 시\r\n        private val reMessageListener = View.OnClickListener {\r\n            msgindex = UUID.randomUUID().toString()\r\n            firestore?.collection(\"Manager\")?.document(\"$msgindex\")\r\n                ?.set(\r\n                    hashMapOf(\r\n                        \"userMessage\" to dialog.userMessage,\r\n                        \"email\" to dialog.email,\r\n                        \"msgindex\" to msgindex,\r\n                        \"id\" to dialog.uid,\r\n                    )\r\n                )\r\n            Toast.makeText(\r\n                this@AddFriendActivity,\r\n                \"상태 메세지 신고가 되었습니다.\",\r\n                Toast.LENGTH_SHORT\r\n            ).show()\r\n        }\r\n\r\n\r\n        //차단 버튼 클릭 시\r\n        private val blockbtnListener = View.OnClickListener {\r\n            Toast.makeText(\r\n                this@AddFriendActivity,\r\n                \"차단 되었습니다.\",\r\n                Toast.LENGTH_SHORT\r\n            ).show()\r\n        }\r\n\r\n\r\n        // 파이어스토어에서 데이터를 불러와서 검색어가 있는지 판단\r\n        fun search(searchWord: String) {\r\n            firestore?.collection(\"Account\")\r\n                ?.addSnapshotListener { querySnapshot, firebaseFirestoreException ->\r\n                    // ArrayList 비워줌\r\n                    friend_add.clear()\r\n\r\n                    for (snapshot in querySnapshot!!.documents) {\r\n                        //에러처리(안 해주면 오류)\r\n                        if (snapshot.getString(\"email\") != null && snapshot.getString(\"userName\") != null)\r\n                            if (snapshot.getString(\"email\")!!\r\n                                    .contains(searchWord) || snapshot.getString(\"userName\")!!\r\n                                    .contains(searchWord)\r\n                            ) {\r\n                                val item = snapshot.toObject(Friend::class.java)\r\n                                friend_add.add(item!!)\r\n                            }\r\n                    }\r\n                    searchcount = friend_add.size\r\n                    getCount()\r\n                    notifyDataSetChanged()\r\n                }\r\n        }\r\n    }\r\n\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/goaltracker/AddFriendActivity.kt b/app/src/main/java/com/example/goaltracker/AddFriendActivity.kt
----- a/app/src/main/java/com/example/goaltracker/AddFriendActivity.kt	(revision dc01b5696cdc23335c96da207405e37020706341)
--+++ b/app/src/main/java/com/example/goaltracker/AddFriendActivity.kt	(date 1671775429027)
--@@ -26,10 +26,12 @@
-- import kotlinx.android.synthetic.main.activity_add_friend.*
-- import kotlinx.android.synthetic.main.item_friend_add.*
-- import kotlinx.android.synthetic.main.report_dialog.*
--+import java.text.SimpleDateFormat
-- import java.util.*
-- import kotlin.collections.ArrayList
-- 
-- 
--+
-- class AddFriendActivity : AppCompatActivity() {
--     //파이어스토어
--     var firestore: FirebaseFirestore? = null
--@@ -198,6 +200,9 @@
--             @SuppressLint("SuspiciousIndentation")
--             fun AddFriendBtnOnclick(item: Friend) {
--                 AddBtn.setOnClickListener {
--+                    val nowTime = System.currentTimeMillis()
--+                    val timeformatter = SimpleDateFormat("yyyy.MM.dd.hh.mm")
--+                    val dateTime = timeformatter.format(nowTime)
--                     if (item.uid != currentUser) {
--                         firestore?.collection("Account")?.document("$currentUser")?.get()
--                             ?.addOnSuccessListener { document ->
--@@ -260,6 +265,46 @@
--                                                 }
--                                                 ?.addOnFailureListener {
--                                                 }
--+
--+                                            //내 노티피케이션
--+                                            firestore?.collection("Account")
--+                                                ?.document("$currentUser")
--+                                                ?.collection("Notification")
--+                                                ?.document("${item.uid}")
--+                                                ?.set(
--+                                                    hashMapOf(
--+                                                        "requestUserId" to item.uid,
--+                                                        "userName" to item.userName,
--+                                                        "userColor" to item.userColor,
--+                                                        "type" to 1,
--+                                                        "read" to false,
--+                                                        "timestamp" to dateTime
--+
--+                                                    )
--+                                                )
--+                                                ?.addOnSuccessListener {}
--+                                                ?.addOnFailureListener {}
--+
--+                                            // 상대방 노티피케이션
--+                                            firestore?.collection("Account")
--+                                                ?.document(item.uid.toString())
--+                                                ?.collection("Notification")
--+                                                ?.document("${currentUser}")
--+                                                ?.set(
--+                                                    hashMapOf(
--+                                                        "requestUserId" to currentUser,
--+                                                        "userName" to indexname,
--+                                                        "userColor" to indexcolor,
--+                                                        "type" to 1,
--+                                                        "read" to false,
--+                                                        "timestamp" to dateTime
--+
--+                                                    )
--+                                                )
--+                                                ?.addOnSuccessListener {
--+                                                }
--+                                                ?.addOnFailureListener {
--+                                                }
-- 
--                                         }
-- 
--@@ -327,6 +372,47 @@
--                                                             }
--                                                             ?.addOnFailureListener {
--                                                             }
--+
--+
--+                                                        //내 노티피케이션
--+                                                        firestore?.collection("Account")
--+                                                            ?.document("$currentUser")
--+                                                            ?.collection("Notification")
--+                                                            ?.document("${item.uid}")
--+                                                            ?.set(
--+                                                                hashMapOf(
--+                                                                    "requestUserId" to item.uid,
--+                                                                    "userName" to item.userName,
--+                                                                    "userColor" to item.userColor,
--+                                                                    "type" to 1,
--+                                                                    "read" to false,
--+                                                                    "timestamp" to dateTime
--+
--+                                                                )
--+                                                            )
--+                                                            ?.addOnSuccessListener {}
--+                                                            ?.addOnFailureListener {}
--+
--+                                                        // 상대방 노티피케이션
--+                                                        firestore?.collection("Account")
--+                                                            ?.document(item.uid.toString())
--+                                                            ?.collection("Notification")
--+                                                            ?.document("${currentUser}")
--+                                                            ?.set(
--+                                                                hashMapOf(
--+                                                                    "requestUserId" to currentUser,
--+                                                                    "userName" to indexname,
--+                                                                    "userColor" to indexcolor,
--+                                                                    "type" to 1,
--+                                                                    "read" to false,
--+                                                                    "timestamp" to dateTime
--+
--+                                                                )
--+                                                            )
--+                                                            ?.addOnSuccessListener {
--+                                                            }
--+                                                            ?.addOnFailureListener {
--+                                                            }
-- 
--                                                     }
--                                                 }
--@@ -381,7 +467,7 @@
--                         "email" to dialog.email,
--                         "index" to index,
--                         "id" to dialog.uid,
---                        )
--+                    )
--                 )
-- 
--             Toast.makeText(
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23_오후_2_02_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23_오후_2_02_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23_오후_2_02_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23_오후_2_02_[Changes]/shelved.patch	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-+++ /dev/null	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-@@ -1,19 +0,0 @@
--Index: .idea/misc.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"../../../../../layout/custom_preview.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/GoalTracker/app/src/main/res/layout/activity_stamp_upload_dialog.xml\" value=\"0.5\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/GoalTracker/app/src/main/res/layout/fragment_stamp_bottom_sheet.xml\" value=\"0.36614583333333334\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/GoalTracker/app/src/main/res/layout/poke_dialog.xml\" value=\"0.36614583333333334\" />\r\n        <entry key=\"..\\:/AndroidStudioProjects/GoalTracker/app/src/main/res/layout/today_stamp_item.xml\" value=\"0.17685185185185184\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/drawable/announce_header.xml\" value=\"0.351\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/drawable/announce_list.xml\" value=\"0.351\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/drawable/button_profile.xml\" value=\"0.356\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/drawable/button_profile_click.xml\" value=\"0.356\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/drawable/button_round.xml\" value=\"0.356\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/drawable/goal_add_button.xml\" value=\"0.351\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/drawable/goal_list.xml\" value=\"0.351\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/drawable/main_border.xml\" value=\"0.356\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/drawable/red_edittext.xml\" value=\"0.356\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/drawable/string.xml\" value=\"0.356\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/drawable/white_edittext.xml\" value=\"0.356\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/font/fontstyle.xml\" value=\"0.33918918918918917\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/layout/activity_join.xml\" value=\"0.3130630630630631\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/layout/activity_login.xml\" value=\"0.3130630630630631\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/layout/activity_main.xml\" value=\"0.25\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/layout/activity_menu.xml\" value=\"0.3022522522522523\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/layout/activity_profile.xml\" value=\"0.3130630630630631\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/layout/announce_layer.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/layout/announce_message.xml\" value=\"0.3022522522522523\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/layout/drawer_main.xml\" value=\"0.3022522522522523\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/layout/fontstyle.xml\" value=\"0.3130630630630631\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/layout/goals_layer.xml\" value=\"0.67\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/layout/login.xml\" value=\"0.33\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/layout/main_toolbar.xml\" value=\"0.3022522522522523\" />\r\n        <entry key=\"..\\:/Users/user/AndroidStudioProjects/MyApplication/app/src/main/res/menu/drawer_menu.xml\" value=\"0.3022522522522523\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/drawable/stamp_board_rectangle.xml\" value=\"0.155\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/drawable/stamp_board_top_rectangle.xml\" value=\"0.155\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/drawable/stamp_progressbar.xml\" value=\"0.155\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/drawable/stamp_upload_button.xml\" value=\"0.155\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/drawable/stamping_button.xml\" value=\"0.155\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/drawable/string.xml\" value=\"0.155\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/drawable/today_stamp_borderline.xml\" value=\"0.155\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/drawable/user_profile_circle.xml\" value=\"0.155\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/drawable/white_background.xml\" value=\"0.155\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/drawable/white_edittext.xml\" value=\"0.155\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_add_friend.xml\" value=\"0.22037037037037038\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_add_goal.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_change_goal.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_edit_goal.xml\" value=\"0.32831325301204817\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_edit_goal2.xml\" value=\"0.1875\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_friend.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_goal_list.xml\" value=\"0.24444444444444444\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_goal_record.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_join.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_login.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_main.xml\" value=\"0.25277777777777777\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_main244444.xml\" value=\"0.1\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_profile.xml\" value=\"0.16979166666666667\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_request_test.xml\" value=\"0.1712962962962963\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_requst_test1.xml\" value=\"0.11614583333333334\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_stamp_board.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/activity_stamp_upload_dialog.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/announcement_item.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/drawer_header.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/drawer_main.xml\" value=\"0.264\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/fragment_goal_record_finished.xml\" value=\"0.16979166666666667\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/fragment_goal_record_ongoing.xml\" value=\"0.16979166666666667\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/fragment_stamp_bottom_sheet.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/goals_layer.xml\" value=\"0.16979166666666667\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/item_accept_friend.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/item_friend.xml\" value=\"0.16979166666666667\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/item_friend_add.xml\" value=\"0.22037037037037038\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/item_goal_record.xml\" value=\"0.16979166666666667\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/item_member.xml\" value=\"0.2\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/item_request_friend.xml\" value=\"0.4\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/main_toolbar.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/notice_layer.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/notice_layer_basic.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/notice_layer_goal.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/notice_view.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/poke_dialog.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/report_dialog.xml\" value=\"0.16979166666666667\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/stamp_num_item.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/today_stamp_item.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"..\\:/Users/youjin/AndroidStudioProjects/Goal-Tracker/app/src/main/res/layout/user_profile_item.xml\" value=\"0.25885416666666666\" />\r\n        <entry key=\"app/src/main/res/drawable/add_button.xml\" value=\"0.1845\" />\r\n        <entry key=\"app/src/main/res/drawable/announce_header.xml\" value=\"0.1845\" />\r\n        <entry key=\"app/src/main/res/drawable/announce_list.xml\" value=\"0.309\" />\r\n        <entry key=\"app/src/main/res/drawable/button_profile_click.xml\" value=\"0.1\" />\r\n        <entry key=\"app/src/main/res/drawable/button_round.xml\" value=\"0.1\" />\r\n        <entry key=\"app/src/main/res/drawable/circle_gray.xml\" value=\"0.136\" />\r\n        <entry key=\"app/src/main/res/drawable/circle_navy.xml\" value=\"0.136\" />\r\n        <entry key=\"app/src/main/res/drawable/click_profile.xml\" value=\"0.1\" />\r\n        <entry key=\"app/src/main/res/drawable/goal_list.xml\" value=\"0.1015\" />\r\n        <entry key=\"app/src/main/res/drawable/goal_record_top.xml\" value=\"0.222\" />\r\n        <entry key=\"app/src/main/res/drawable/gray_edittext.xml\" value=\"0.312\" />\r\n        <entry key=\"app/src/main/res/drawable/ic_launcher_background.xml\" value=\"0.312\" />\r\n        <entry key=\"app/src/main/res/drawable/main_border.xml\" value=\"0.135\" />\r\n        <entry key=\"app/src/main/res/drawable/menu_border.xml\" value=\"0.135\" />\r\n        <entry key=\"app/src/main/res/drawable/profile_setting_background.xml\" value=\"0.158\" />\r\n        <entry key=\"app/src/main/res/drawable/profile_view.xml\" value=\"0.1835\" />\r\n        <entry key=\"app/src/main/res/drawable/pwcheck_edittext.xml\" value=\"0.121\" />\r\n        <entry key=\"app/src/main/res/drawable/red_edittext.xml\" value=\"0.312\" />\r\n        <entry key=\"app/src/main/res/drawable/stamp_board_rectangle.xml\" value=\"0.222\" />\r\n        <entry key=\"app/src/main/res/drawable/stamp_board_top_rectangle.xml\" value=\"0.222\" />\r\n        <entry key=\"app/src/main/res/drawable/string.xml\" value=\"0.312\" />\r\n        <entry key=\"app/src/main/res/drawable/white_edittext.xml\" value=\"0.312\" />\r\n        <entry key=\"app/src/main/res/font/fontstyle.xml\" value=\"0.2431111111111111\" />\r\n        <entry key=\"app/src/main/res/layout/activity_add_friend.xml\" value=\"0.3380208333333333\" />\r\n        <entry key=\"app/src/main/res/layout/activity_add_goal.xml\" value=\"0.3380208333333333\" />\r\n        <entry key=\"app/src/main/res/layout/activity_announcement.xml\" value=\"0.36047617594401027\" />\r\n        <entry key=\"app/src/main/res/layout/activity_app_notify.xml\" value=\"0.30625\" />\r\n        <entry key=\"app/src/main/res/layout/activity_goal_list.xml\" value=\"0.3380208333333333\" />\r\n        <entry key=\"app/src/main/res/layout/activity_goal_record.xml\" value=\"0.297857666015625\" />\r\n        <entry key=\"app/src/main/res/layout/activity_join.xml\" value=\"0.22408905029296877\" />\r\n        <entry key=\"app/src/main/res/layout/activity_login.xml\" value=\"0.4931900368597275\" />\r\n        <entry key=\"app/src/main/res/layout/activity_main.xml\" value=\"0.375\" />\r\n        <entry key=\"app/src/main/res/layout/activity_profile.xml\" value=\"0.21739130434782608\" />\r\n        <entry key=\"app/src/main/res/layout/activity_stamp_board.xml\" value=\"0.273972602739726\" />\r\n        <entry key=\"app/src/main/res/layout/activity_stamp_upload_dialog.xml\" value=\"0.3380208333333333\" />\r\n        <entry key=\"app/src/main/res/layout/announce_layer.xml\" value=\"0.29774774774774776\" />\r\n        <entry key=\"app/src/main/res/layout/announce_message.xml\" value=\"0.21823204419889503\" />\r\n        <entry key=\"app/src/main/res/layout/announcement_item.xml\" value=\"0.3978201634877384\" />\r\n        <entry key=\"app/src/main/res/layout/change_pw_dialog.xml\" value=\"0.4126763064485283\" />\r\n        <entry key=\"app/src/main/res/layout/drawer_header.xml\" value=\"0.43575418994413406\" />\r\n        <entry key=\"app/src/main/res/layout/change_pw_dialog.xml\" value=\"0.28442028985507245\" />\r\n        <entry key=\"app/src/main/res/layout/drawer_header.xml\" value=\"0.25\" />\r\n        <entry key=\"app/src/main/res/layout/drawer_main.xml\" value=\"0.165\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_goal_record_activity2.xml\" value=\"0.3182291666666667\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_goal_record_finished.xml\" value=\"0.29281311035156254\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_goal_record_ongoing.xml\" value=\"0.30416666666666664\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_goal_record_ongoing2.xml\" value=\"0.15520833333333334\" />\r\n        <entry key=\"app/src/main/res/layout/fragment_stamp_bottom_sheet.xml\" value=\"0.3182291666666667\" />\r\n        <entry key=\"app/src/main/res/layout/goals_layer.xml\" value=\"0.45223178412970605\" />\r\n        <entry key=\"app/src/main/res/layout/item_friend_add.xml\" value=\"0.3380208333333333\" />\r\n        <entry key=\"app/src/main/res/layout/item_goal_record.xml\" value=\"0.25860238449565376\" />\r\n        <entry key=\"app/src/main/res/layout/item_member.xml\" value=\"0.3380208333333333\" />\r\n        <entry key=\"app/src/main/res/layout/main_toolbar.xml\" value=\"0.1\" />\r\n        <entry key=\"app/src/main/res/layout/notice_layer.xml\" value=\"0.3136184692382813\" />\r\n        <entry key=\"app/src/main/res/layout/notice_layer_basic.xml\" value=\"0.18568840579710144\" />\r\n        <entry key=\"app/src/main/res/layout/notice_layer_friend.xml\" value=\"0.15405405405405406\" />\r\n        <entry key=\"app/src/main/res/layout/notice_layer_goal.xml\" value=\"0.258051856788429\" />\r\n        <entry key=\"app/src/main/res/layout/notice_view.xml\" value=\"0.29684684684684687\" />\r\n        <entry key=\"app/src/main/res/layout/poke_dialog.xml\" value=\"0.3182291666666667\" />\r\n        <entry key=\"app/src/main/res/layout/profile_setting.xml\" value=\"0.2954954954954955\" />\r\n        <entry key=\"app/src/main/res/layout/profile_setting_background.xml\" value=\"0.2954954954954955\" />\r\n        <entry key=\"app/src/main/res/layout/stamp_num_item.xml\" value=\"0.3182291666666667\" />\r\n        <entry key=\"app/src/main/res/layout/stamp_upload_dialog.xml\" value=\"0.3182291666666667\" />\r\n        <entry key=\"app/src/main/res/layout/today_stamp_item.xml\" value=\"0.23324275362318841\" />\r\n        <entry key=\"app/src/main/res/layout/user_profile_item.xml\" value=\"0.8704711914062501\" />\r\n        <entry key=\"app/src/main/res/menu/drawer_menu.xml\" value=\"0.2603775024414063\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" project-jdk-name=\"11\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n  <component name=\"VisualizationToolProject\">\r\n    <option name=\"state\">\r\n      <ProjectState>\r\n        <option name=\"scale\" value=\"0.273972602739726\" />\r\n      </ProjectState>\r\n    </option>\r\n  </component>\r\n</project>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/.idea/misc.xml b/.idea/misc.xml
----- a/.idea/misc.xml	(revision e1cb26bd2693dd5415abe283c3350568bafa47ec)
--+++ b/.idea/misc.xml	(date 1671573322167)
--@@ -152,7 +152,7 @@
--       </map>
--     </option>
--   </component>
---  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" project-jdk-name="11" project-jdk-type="JavaSDK">
--+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="11" project-jdk-type="JavaSDK">
--     <output url="file://$PROJECT_DIR$/build/classes" />
--   </component>
--   <component name="ProjectType">
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23__3_05__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23__3_05__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23__3_05__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23__3_05__Changes_.xml	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-+++ /dev/null	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-@@ -1,4 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2022-12-23_오후_3_05_[Changes]" date="1671775537484" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-23_오후_3_05_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2022-12-23 오후 3:05 [Changes]" />
--</changelist>
-\ No newline at end of file
-Index: app/src/main/java/com/example/goaltracker/NoticeActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.goaltracker\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.app.Notification\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.GradientDrawable\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Button\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.constraintlayout.widget.ConstraintSet\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.facebook.gamingservices.GameRequestDialog.show\r\nimport com.google.android.material.snackbar.Snackbar\r\nimport com.google.android.material.snackbar.Snackbar.make\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.FieldValue\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.firestore.Query\r\nimport kotlinx.android.synthetic.main.main_toolbar.*\r\nimport kotlinx.android.synthetic.main.notice_layer.view.*\r\nimport kotlinx.android.synthetic.main.notice_view.*\r\n\r\nclass NoticeActivity : AppCompatActivity() {\r\n\r\n    lateinit var noticeAdapter: NoticesAdapter\r\n//    val notices = mutableListOf<Notification>()\r\n    var firebaseAuth : FirebaseAuth ?= null\r\n    var firestore : FirebaseFirestore ?= null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        setTheme(MySharedPreferences.getTheme(this))\r\n        setContentView(R.layout.notice_view)\r\n\r\n        firebaseAuth = FirebaseAuth.getInstance()\r\n        firestore = FirebaseFirestore.getInstance()\r\n\r\n        notice_list.adapter = NoticesAdapter()\r\n\r\n        backtomain.setOnClickListener {\r\n            finish()\r\n        }\r\n\r\n    }\r\n\r\n    inner class NoticesAdapter: RecyclerView.Adapter<NoticesAdapter.ViewHolder>(){\r\n        private var noticeDto = arrayListOf<Notifications>()\r\n        init {\r\n            var accountUId: String? = \"\"\r\n            accountUId = firebaseAuth?.currentUser?.uid.toString()\r\n            firestore?.collection(\"Account\")?.document(accountUId)?.collection(\"Notification\")?.\r\n            orderBy(\"timestamp\", Query.Direction.DESCENDING)?.addSnapshotListener { querySnapshot, firebaseFirestoreException ->\r\n                noticeDto.clear()\r\n\r\n                for (snapshot in querySnapshot!!.documents) {\r\n                    var item = snapshot.toObject(Notifications::class.java)\r\n//                    Log.d(\"item\", item.toString())\r\n                    noticeDto.add(item!!)\r\n                }\r\n                notifyDataSetChanged()\r\n                Log.d(\"개수\", noticeDto.size.toString())\r\n            }\r\n        }\r\n\r\n        inner class ViewHolder(view: View):RecyclerView.ViewHolder(view){\r\n\r\n        }\r\n\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): NoticesAdapter.ViewHolder {\r\n            val view = LayoutInflater.from(parent.context).inflate(R.layout.notice_layer, parent, false)\r\n\r\n            return ViewHolder(view)\r\n        }\r\n\r\n        override fun onBindViewHolder(holder: ViewHolder, position: Int) {\r\n//            var viewHolder = (holder as ViewHolder).itemView\r\n            val item = noticeDto[position]\r\n\r\n            setNoticeList(holder, item)\r\n//            viewHolder.notice_text.text = item.message\r\n//            viewHolder.notice_profile_name.text = item.userName\r\n        }\r\n\r\n        override fun getItemCount(): Int = noticeDto.size\r\n\r\n    }\r\n\r\n    private fun setNoticeList(holder: NoticesAdapter.ViewHolder, item: Notifications) {\r\n        var viewHolder = (holder as NoticesAdapter.ViewHolder).itemView\r\n\r\n\r\n\r\n        if (item.type == 0) { // 관리자 공지\r\n            viewHolder.notice_text.text = item.message\r\n            viewHolder.notice_profile_name.text = item.userName?.substring(0, 1)\r\n            viewHolder.notice_button.setVisibility(View.GONE)\r\n            viewHolder.notice_cancel_button.setVisibility(View.GONE)\r\n            var profileColor : GradientDrawable = viewHolder.notice_profile.background as GradientDrawable\r\n            val color = item.userColor\r\n            if (color != null) {\r\n                profileColor.setColor(Color.parseColor(color))\r\n            }\r\n\r\n        } else if (item.type == 1) {  // 친구 요청\r\n            viewHolder.notice_text.text = item.userName+\"님이 친구 요청을 보냈습니다.\"\r\n            viewHolder.notice_profile_name.text = item.userName?.substring(0 , 1)\r\n            var profileColor : GradientDrawable = viewHolder.notice_profile.background as GradientDrawable\r\n            val color = item.userColor\r\n            if (color != null) {\r\n                profileColor.setColor(Color.parseColor(color))\r\n            }\r\n\r\n            var accountUId: String? = \"\"\r\n            accountUId = firebaseAuth?.currentUser?.uid.toString()\r\n            val friendList : ArrayList<String> = MySharedPreferences.getFriendList(this)\r\n\r\n            if (friendList.contains(item.requestUserId.toString())){\r\n                viewHolder.notice_button.text = \"수락 완료\"\r\n                viewHolder.notice_button.isEnabled = false\r\n            }\r\n\r\n            if (!friendList.contains(item.requestUserId.toString())) {\r\n                viewHolder.notice_button.text = \"친구 수락\"\r\n                viewHolder.notice_button.setOnClickListener {\r\n                    try {\r\n                        Log.d(item.requestUserId.toString(), \"요청한 유저 아이디\")\r\n                        firestore?.collection(\"Account\")?.document(accountUId!!)\r\n                            ?.collection(\"Friend\")\r\n                            ?.document(item.requestUserId.toString())\r\n                            ?.update(\"status\", \"friend\")\r\n                            ?.addOnSuccessListener {\r\n                                // 내 account db에서 status friend로 바꾸기가 성공적으로 완료되면 상대방 account db에서 status friend로 바꾸기\r\n                                firestore?.collection(\"Account\")?.document(item.requestUserId.toString())\r\n                                    ?.collection(\"Friend\")\r\n                                    ?.document(accountUId!!)\r\n                                    ?.update(\"status\", \"friend\")\r\n                                    ?.addOnSuccessListener {\r\n                                        viewHolder.notice_button.text = \"수락 완료\"\r\n                                        viewHolder.notice_button.isEnabled = false\r\n                                    }\r\n                                    ?.addOnFailureListener {\r\n                                        throw IllegalArgumentException()\r\n                                    }\r\n                            }\r\n                            ?.addOnFailureListener {\r\n                                throw IllegalArgumentException()\r\n                            }\r\n\r\n                    } catch(e: IllegalArgumentException) {\r\n                        val currentLayout = findViewById<View>(R.id.notice_view)\r\n                        val snackbar = Snackbar.make(currentLayout, \"친구 수락에 실패했습니다.\", Snackbar.LENGTH_LONG)\r\n                        snackbar.show()\r\n                    }\r\n                    // 내 친구 목록\r\n                }\r\n            }\r\n\r\n\r\n        } else if (item.type == 2) {  // 골 초대\r\n            viewHolder.notice_text.text = item.userName+\"\\n새로운 골에 초대받았습니다.\"\r\n            viewHolder.notice_profile_name.text = item.userName?.substring(0 , 1)\r\n\r\n            var profileColor : GradientDrawable = viewHolder.notice_profile.background as GradientDrawable\r\n            val color : String? = item.userColor\r\n            Log.d(item.userColor, \"유저 컬러\")\r\n            if (color != null) {\r\n                profileColor.setColor(Color.parseColor(color))\r\n            }\r\n\r\n            var accountUId: String?=\"\"\r\n            accountUId = firebaseAuth?.currentUser?.uid.toString()\r\n            val goalList : ArrayList<String> = MySharedPreferences.getGoalList(this)\r\n\r\n            if (goalList.contains(item.goalUid)) {\r\n                viewHolder.notice_button.text = \"수락 완료\"\r\n                viewHolder.notice_button.isEnabled = false\r\n            }\r\n            if (!goalList.contains(item.goalUid)) {\r\n                viewHolder.notice_button.text = \"Goal 수락\"\r\n                viewHolder.notice_button.setOnClickListener {\r\n                    firestore?.collection(\"Account\")?.document(accountUId)?.get()?.addOnSuccessListener {\r\n                        var curUser = it.toObject(Account::class.java)!!\r\n                        val userInfo = GoalTeamData(accountUId, curUser?.userName.toString(), curUser?.userColor.toString(), curUser?.userMessage.toString())\r\n\r\n                        firestore?.collection(\"Goal\")?.document(item.goalUid.toString())\r\n                            ?.collection(\"team\")\r\n                            ?.document(accountUId!!)\r\n                            ?.set(userInfo)\r\n                            ?.addOnSuccessListener {\r\n                                goalList.add(item.goalUid.toString())\r\n                                val goalUpdate = hashMapOf<String, Any?>(\r\n                                    \"myGoalList\" to goalList,\r\n                                )\r\n                                firestore?.collection(\"Account\")?.document(accountUId)?.update(goalUpdate)\r\n                                viewHolder.notice_button.text = \"수락 완료\"\r\n                                viewHolder.notice_button.isEnabled = false\r\n                            }\r\n\r\n                        val myGoalList : List<String>? = curUser.myGoalList\r\n\r\n                        firestore?.collection(\"Account\")?.document()\r\n                    }\r\n                }\r\n            }\r\n\r\n        } else if (item.type == 3) {  // 콕 찌르기\r\n            viewHolder.notice_text.text = \"[\"+item.goalName+\"]\\n\"+item.userName+\"의 콕 찌르기가 도착했습니다.\\n아직, 오늘의 목표를 완료하지 못하셨나요?\"\r\n            viewHolder.notice_profile_name.text = item.userName?.substring(0 , 1)\r\n            viewHolder.notice_button.setVisibility(View.GONE)\r\n            viewHolder.notice_cancel_button.setVisibility(View.GONE)\r\n            var profileColor : GradientDrawable = viewHolder.notice_profile.background as GradientDrawable\r\n            val color :String = item.userColor.toString()\r\n            if (color != null) {\r\n                profileColor.setColor(Color.parseColor(color))\r\n            }\r\n\r\n        } else {\r\n            throw Exception(\"해당 유형의 알림이 존재하지 않습니다.\")\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/goaltracker/NoticeActivity.kt b/app/src/main/java/com/example/goaltracker/NoticeActivity.kt
---- a/app/src/main/java/com/example/goaltracker/NoticeActivity.kt	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-+++ b/app/src/main/java/com/example/goaltracker/NoticeActivity.kt	(date 1672565732292)
-@@ -30,7 +30,7 @@
- class NoticeActivity : AppCompatActivity() {
- 
-     lateinit var noticeAdapter: NoticesAdapter
--//    val notices = mutableListOf<Notification>()
-+    //    val notices = mutableListOf<Notification>()
-     var firebaseAuth : FirebaseAuth ?= null
-     var firestore : FirebaseFirestore ?= null
- 
-Index: app/src/main/java/com/example/goaltracker/LoginActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.goaltracker\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.content.pm.PackageInfo\r\nimport android.content.pm.PackageManager\r\nimport android.os.Bundle\r\nimport android.util.Base64\r\nimport android.util.Log\r\nimport android.view.MotionEvent\r\nimport android.view.inputmethod.InputMethodManager\r\nimport android.widget.EditText\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.auth.FirebaseUser\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.ktx.Firebase\r\nimport kotlinx.android.synthetic.main.activity_login.*\r\nimport java.security.MessageDigest\r\nimport java.security.NoSuchAlgorithmException\r\n\r\n\r\n@Suppress(\"DEPRECATION\")\r\nclass LoginActivity : AppCompatActivity() {\r\n    lateinit var emailEt: EditText\r\n    lateinit var pwEt: EditText\r\n    private val RC_SIGN_IN=9001\r\n    //firebase auth\r\n    private var firebaseAuth: FirebaseAuth ?=null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_login)\r\n\r\n        emailEt=findViewById(R.id.loginEmail)\r\n        pwEt=findViewById(R.id.loginPW)\r\n\r\n        firebaseAuth = Firebase.auth\r\n\r\n        loginButton.setOnClickListener {\r\n            signIn(loginEmail.text.toString(), loginPW.text.toString())\r\n        }\r\n\r\n        joinButton.setOnClickListener{\r\n            startActivity(Intent(this, JoinActivity::class.java))\r\n        }\r\n\r\n        googleLogin.setOnClickListener{\r\n            startActivity(Intent(this, GoogleLogin::class.java))\r\n        }\r\n\r\n        facebookLogin.setOnClickListener {\r\n            startActivity(Intent(this, FacebookLogin::class.java))\r\n        }\r\n    }\r\n\r\n    // 로그아웃하지 않을 시 자동 로그인 , 회원가입시 바로 로그인 됨\r\n    public override fun onStart() {\r\n        super.onStart()\r\n        toMainActivity(firebaseAuth?.currentUser)\r\n    }\r\n\r\n    // 로그인\r\n    private fun signIn(email: String, password: String) {\r\n\r\n        if (email.isNotEmpty() && password.isNotEmpty()) {\r\n            firebaseAuth?.signInWithEmailAndPassword(email, password)\r\n                ?.addOnCompleteListener(this) { task ->\r\n                    if (task.isSuccessful) {\r\n\r\n                        Toast.makeText(\r\n                            baseContext, \"로그인에 성공 하였습니다.\",\r\n                            Toast.LENGTH_SHORT\r\n                        ).show()\r\n                        moveMainPage(firebaseAuth?.currentUser)\r\n                    } else {\r\n                        Toast.makeText(\r\n                            baseContext, \"로그인에 실패 하였습니다.\",\r\n                            Toast.LENGTH_SHORT\r\n                        ).show()\r\n                    }\r\n                }\r\n        }\r\n    }\r\n\r\n\r\n    // 유저정보 넘겨주고 프로필 설정 액티비티 호출\r\n    fun moveMainPage(user: FirebaseUser?){\r\n        if( user!= null){\r\n            startActivity(Intent(this, MainActivity::class.java))\r\n            finish()\r\n        } else {\r\n            Toast.makeText(\r\n                baseContext, \"사용자 정보가 없습니다.\",\r\n                Toast.LENGTH_SHORT\r\n            ).show()\r\n        }\r\n    }\r\n\r\n    fun toMainActivity(user: FirebaseUser?){\r\n        if(user !=null){\r\n            startActivity(Intent(this, MainActivity::class.java))\r\n            finish()\r\n        }\r\n    }\r\n\r\n    override fun onTouchEvent(event: MotionEvent?): Boolean {\r\n        val imm: InputMethodManager = getSystemService(Context.INPUT_METHOD_SERVICE) as InputMethodManager\r\n        imm.hideSoftInputFromWindow(currentFocus?.windowToken, 0)\r\n        return true\r\n    }\r\n}\r\n\r\n\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/goaltracker/LoginActivity.kt b/app/src/main/java/com/example/goaltracker/LoginActivity.kt
---- a/app/src/main/java/com/example/goaltracker/LoginActivity.kt	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-+++ b/app/src/main/java/com/example/goaltracker/LoginActivity.kt	(date 1672641003069)
-@@ -111,6 +111,3 @@
-         return true
-     }
- }
--
--
--
-Index: app/src/main/java/com/example/goaltracker/AddFriendActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.goaltracker\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.ColorDrawable\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.view.Window\r\nimport android.widget.Button\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.FieldValue\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport kotlinx.android.synthetic.main.activity_add_friend.searchWord\r\nimport kotlinx.android.synthetic.main.activity_add_friend.*\r\nimport kotlinx.android.synthetic.main.item_friend_add.*\r\nimport kotlinx.android.synthetic.main.report_dialog.*\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\n\r\n\r\nclass AddFriendActivity : AppCompatActivity() {\r\n    //파이어스토어\r\n    var firestore: FirebaseFirestore? = null\r\n    private val currentUser = Firebase.auth.currentUser?.uid\r\n\r\n    var searchcount = 0  //사람 수\r\n    private lateinit var dialog: ReportDialog  //다이얼로그\r\n    lateinit var index: String\r\n    lateinit var msgindex: String\r\n    var indexname : String? = null\r\n    var indexemail : String? = null\r\n    var indexcolor : String? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        setTheme(MySharedPreferences.getTheme(this))\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_add_friend)\r\n\r\n        searchWord.addTextChangedListener(object : TextWatcher {\r\n\r\n            //텍스트가 변경되기 바로 이전에 동작\r\n            override fun beforeTextChanged(charSequence: CharSequence, i: Int, i1: Int, i2: Int) {}\r\n\r\n            //텍스트가 변경되는 동시에 동작\r\n            override fun onTextChanged(charSequence: CharSequence, i: Int, i1: Int, i2: Int) {}\r\n\r\n            // 텍스트가 변경된 이후에 동작\r\n            override fun afterTextChanged(editable: Editable) {\r\n                // input창에 문자를 입력할때마다 호출된다.\r\n                // search 메소드를 호출한다.\r\n                (FriendAddRecyclerView.adapter as RecyclerViewAdapter).search(searchWord.text.toString())\r\n            }\r\n        })\r\n\r\n        // 파이어스토어 인스턴스 초기화\r\n        firestore = FirebaseFirestore.getInstance()\r\n\r\n        FriendAddRecyclerView.adapter = RecyclerViewAdapter()\r\n        FriendAddRecyclerView.layoutManager = LinearLayoutManager(this)\r\n\r\n\r\n        //x버튼 누르면 main 화면으로 이동\r\n        backBtn.setOnClickListener {\r\n            startActivity(Intent(this, FriendActivity::class.java))\r\n        }\r\n\r\n\r\n        // 검색 옵션에 따라 검색\r\n        searchBtn.setOnClickListener {\r\n            (FriendAddRecyclerView.adapter as RecyclerViewAdapter).search(searchWord.text.toString())\r\n        }\r\n\r\n\r\n    }\r\n\r\n    //인원 카운트\r\n    fun getCount() {\r\n        var text_count = findViewById<TextView>(R.id.search_count)\r\n        text_count.text = \"\" + searchcount + \"명\"\r\n    }\r\n\r\n\r\n    inner class RecyclerViewAdapter : RecyclerView.Adapter<RecyclerView.ViewHolder>() {\r\n        // Friend 클래스 ArrayList 생성성\r\n        var friend_add: ArrayList<Friend> = arrayListOf()\r\n\r\n        init {  // Account의 문서를 불러온 뒤 Friend으로 변환해 ArrayList에 담음\r\n            firestore?.collection(\"Account\")\r\n                ?.addSnapshotListener { querySnapshot, firebaseFirestoreException ->\r\n                    // ArrayList 비워줌\r\n                    friend_add.clear()\r\n\r\n                    for (snapshot in querySnapshot!!.documents) {\r\n                        var item = snapshot.toObject(Friend::class.java)\r\n                        friend_add.add(item!!)\r\n                    }\r\n\r\n\r\n                    notifyDataSetChanged()\r\n                }\r\n\r\n        }\r\n\r\n        // xml파일을 inflate하여 ViewHolder를 생성\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {\r\n            var view =\r\n                LayoutInflater.from(parent.context).inflate(R.layout.item_friend_add, parent, false)\r\n            return ViewHolder(view)\r\n        }\r\n\r\n        // onCreateViewHolder에서 만든 view와 실제 데이터를 연결\r\n        override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {\r\n            var viewHolder = (holder as ViewHolder).itemView\r\n            holder.SetFriendAddName(friend_add[position])\r\n            holder.SetFriendUid(friend_add[position])\r\n            holder.SetProfileAddName(friend_add[position])\r\n            holder.AddFriendBtnOnclick(friend_add[position])\r\n            holder.SetFriendAddColor(friend_add[position])\r\n            holder.SetFriendAddEmail(friend_add[position])\r\n\r\n            var account = friend_add[position]\r\n\r\n            //아이템을 클릭하면 다이얼로그 생성\r\n            holder.itemView.setOnClickListener {\r\n                callDialog(it.context, account)\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        inner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {\r\n\r\n            private val AddName: TextView = itemView.findViewById(R.id.AddName)\r\n            private val Adduid: TextView = itemView.findViewById(R.id.Adduid)\r\n            private val ProfileName: TextView = itemView.findViewById(R.id.AddProfileName)\r\n            private val AddEmail: TextView = itemView.findViewById(R.id.AddEmail)\r\n            private val AddColor: ImageView = itemView.findViewById(R.id.AddColor)\r\n            private val AddBtn: Button = itemView.findViewById(R.id.AddBtn)\r\n\r\n            //친구 추가 이름\r\n            fun SetFriendAddName(item: Friend) {\r\n                AddName.text = item.userName\r\n            }\r\n\r\n            //친구 uid\r\n            fun SetFriendUid(item: Friend) {\r\n                Adduid.text = item.uid\r\n            }\r\n\r\n            //친구 프로필 이름\r\n            fun SetProfileAddName(item: Friend) {\r\n                ProfileName.text = item.userName?.get(0).toString()\r\n            }\r\n\r\n            //친구 추가 프로필\r\n            fun SetFriendAddColor(item: Friend) {\r\n                var circleResource = 0\r\n                when (item.userColor) {\r\n                    \"#f69b94\" -> circleResource = R.drawable.b_f69b94\r\n                    \"#f8c8c4\" -> circleResource = R.drawable.b_f8c8c4\r\n                    \"#fcdcce\" -> circleResource = R.drawable.b_fcdcce\r\n                    \"#96b0e5\" -> circleResource = R.drawable.b_96b0e5\r\n                    \"#92b9e2\" -> circleResource = R.drawable.b_92b9e2\r\n                    \"#ebc0c7\" -> circleResource = R.drawable.b_ebc0c7\r\n                    \"#7bb6c8\" -> circleResource = R.drawable.b_7bb6c8\r\n                    \"#aad3d7\" -> circleResource = R.drawable.b_aad3d7\r\n                    \"#f5f1f0\" -> circleResource = R.drawable.b_f5f1f0\r\n                    \"#d5e3e6\" -> circleResource = R.drawable.b_d5e3e6\r\n                    \"#f2a4b1\" -> circleResource = R.drawable.b_f2a4b1\r\n                    \"#7175a5\" -> circleResource = R.drawable.b_7175a5\r\n                    \"#a1b3d7\" -> circleResource = R.drawable.b_a1b3d7\r\n                    \"#bd83cf\" -> circleResource = R.drawable.b_bd83cf\r\n                    \"#e5afe9\" -> circleResource = R.drawable.b_e5afe9\r\n\r\n                }\r\n                AddColor.setImageResource(circleResource)\r\n            }\r\n\r\n            //친구 추가 이메일\r\n            fun SetFriendAddEmail(item: Friend) {\r\n                AddEmail.text = item.email\r\n            }\r\n\r\n            //친구 추가 버튼\r\n            @SuppressLint(\"SuspiciousIndentation\")\r\n            fun AddFriendBtnOnclick(item: Friend) {\r\n                AddBtn.setOnClickListener {\r\n                    val nowTime = System.currentTimeMillis()\r\n                    val timeformatter = SimpleDateFormat(\"yyyy.MM.dd.hh.mm\")\r\n                    val dateTime = timeformatter.format(nowTime)\r\n                    if (item.uid != currentUser) {\r\n                        firestore?.collection(\"Account\")?.document(\"$currentUser\")?.get()\r\n                            ?.addOnSuccessListener { document ->\r\n                                if (document != null) {\r\n                                    // 현재 사용자 이름이랑 이메일, 색상 받아오기\r\n                                    indexname = document.data?.get(\"userName\").toString()\r\n                                    indexemail = document.data?.get(\"email\").toString()\r\n                                    indexcolor = document.data?.get(\"userColor\").toString()\r\n                                }\r\n\r\n                                firestore?.collection(\"Account\")?.document(\"$currentUser\")\r\n                                    ?.collection(\"Friend\")\r\n                                    ?.whereEqualTo(\"uid\", item.uid.toString())?.get()\r\n                                    ?.addOnCompleteListener { task ->\r\n\r\n\r\n                                        // 친구 리스트가 없는 경우\r\n                                        if (task.result?.size() == 0) {\r\n                                            // 내 친구 목록\r\n                                            firestore?.collection(\"Account\")\r\n                                                ?.document(\"$currentUser\")\r\n                                                ?.collection(\"Friend\")\r\n                                                ?.document(\"${item.uid}\")\r\n                                                ?.set(\r\n                                                    hashMapOf(\r\n                                                        \"uid\" to item.uid,\r\n                                                        \"status\" to \"request\",\r\n                                                        \"userName\" to item.userName,\r\n                                                        \"email\" to item.email,\r\n                                                        \"userColor\" to item.userColor\r\n\r\n                                                    )\r\n                                                )\r\n                                                ?.addOnSuccessListener {\r\n                                                    Toast.makeText(\r\n                                                        this@AddFriendActivity,\r\n                                                        \"친구 신청을 보냈습니다.\",\r\n                                                        Toast.LENGTH_SHORT\r\n                                                    ).show()\r\n\r\n                                                }\r\n                                                ?.addOnFailureListener {}\r\n\r\n                                            // 상대방 친구 목록\r\n                                            firestore?.collection(\"Account\")\r\n                                                ?.document(item.uid.toString())\r\n                                                ?.collection(\"Friend\")\r\n                                                ?.document(\"${currentUser}\")\r\n                                                ?.set(\r\n                                                    hashMapOf(\r\n                                                        \"uid\" to currentUser,\r\n                                                        \"status\" to \"accept\",\r\n                                                        \"userName\" to indexname,\r\n                                                        \"email\" to indexemail,\r\n                                                        \"userColor\" to indexcolor\r\n\r\n                                                    )\r\n                                                )\r\n                                                ?.addOnSuccessListener {\r\n                                                }\r\n                                                ?.addOnFailureListener {\r\n                                                }\r\n\r\n                                            //내 노티피케이션\r\n                                            firestore?.collection(\"Account\")\r\n                                                ?.document(\"$currentUser\")\r\n                                                ?.collection(\"Notification\")\r\n                                                ?.document(\"${item.uid}\")\r\n                                                ?.set(\r\n                                                    hashMapOf(\r\n                                                        \"requestUserId\" to item.uid,\r\n                                                        \"userName\" to item.userName,\r\n                                                        \"userColor\" to item.userColor,\r\n                                                        \"type\" to 1,\r\n                                                        \"read\" to false,\r\n                                                        \"timestamp\" to FieldValue.serverTimestamp()\r\n\r\n                                                    )\r\n                                                )\r\n                                                ?.addOnSuccessListener {}\r\n                                                ?.addOnFailureListener {}\r\n\r\n                                            // 상대방 노티피케이션\r\n                                            firestore?.collection(\"Account\")\r\n                                                ?.document(item.uid.toString())\r\n                                                ?.collection(\"Notification\")\r\n                                                ?.document(\"${currentUser}\")\r\n                                                ?.set(\r\n                                                    hashMapOf(\r\n                                                        \"requestUserId\" to currentUser,\r\n                                                        \"userName\" to indexname,\r\n                                                        \"userColor\" to indexcolor,\r\n                                                        \"type\" to 1,\r\n                                                        \"read\" to false,\r\n                                                        \"timestamp\" to FieldValue.serverTimestamp()\r\n\r\n                                                    )\r\n                                                )\r\n                                                ?.addOnSuccessListener {\r\n                                                }\r\n                                                ?.addOnFailureListener {\r\n                                                }\r\n\r\n                                        }\r\n\r\n                                        // 친구 리스트가 있는 경우\r\n                                        else {\r\n                                            var notFriend = true\r\n                                            // 이미 친구임\r\n                                            firestore?.collection(\"Account\")\r\n                                                ?.document(\"$currentUser\")\r\n                                                ?.collection(\"Friend\")\r\n                                                ?.document(\"${item.uid}\")?.get()\r\n                                                ?.addOnSuccessListener { document ->\r\n                                                    if (document != null) {\r\n                                                        Toast.makeText(\r\n                                                            this@AddFriendActivity,\r\n                                                            \"이미 친구입니다.\",\r\n                                                            Toast.LENGTH_SHORT\r\n                                                        ).show()\r\n                                                        notFriend = false\r\n\r\n                                                    }\r\n\r\n                                                    if (notFriend) {\r\n                                                        // 내 친구 목록\r\n                                                        firestore?.collection(\"Account\")\r\n                                                            ?.document(\"$currentUser\")\r\n                                                            ?.collection(\"Friend\")\r\n                                                            ?.document(\"${item.uid}\")\r\n                                                            ?.set(\r\n                                                                hashMapOf(\r\n                                                                    \"uid\" to item.uid,\r\n                                                                    \"status\" to \"request\",\r\n                                                                    \"userName\" to item.userName,\r\n                                                                    \"email\" to item.email,\r\n                                                                    \"userColor\" to item.userColor\r\n\r\n                                                                )\r\n                                                            )\r\n                                                            ?.addOnSuccessListener {\r\n                                                                Toast.makeText(\r\n                                                                    this@AddFriendActivity,\r\n                                                                    \"친구 신청을 보냈습니다.\",\r\n                                                                    Toast.LENGTH_SHORT\r\n                                                                ).show()\r\n\r\n                                                            }\r\n                                                            ?.addOnFailureListener {}\r\n\r\n                                                        // 상대방 친구 목록\r\n                                                        firestore?.collection(\"Account\")\r\n                                                            ?.document(item.uid.toString())\r\n                                                            ?.collection(\"Friend\")\r\n                                                            ?.document(\"${currentUser}\")\r\n                                                            ?.set(\r\n                                                                hashMapOf(\r\n                                                                    \"uid\" to currentUser,\r\n                                                                    \"status\" to \"accept\",\r\n                                                                    \"userName\" to indexname,\r\n                                                                    \"email\" to indexemail,\r\n                                                                    \"userColor\" to indexcolor\r\n\r\n                                                                )\r\n                                                            )\r\n                                                            ?.addOnSuccessListener {\r\n                                                            }\r\n                                                            ?.addOnFailureListener {\r\n                                                            }\r\n\r\n\r\n                                                        //내 노티피케이션\r\n                                                        firestore?.collection(\"Account\")\r\n                                                            ?.document(\"$currentUser\")\r\n                                                            ?.collection(\"Notification\")\r\n                                                            ?.document(\"${item.uid}\")\r\n                                                            ?.set(\r\n                                                                hashMapOf(\r\n                                                                    \"requestUserId\" to item.uid,\r\n                                                                    \"userName\" to item.userName,\r\n                                                                    \"userColor\" to item.userColor,\r\n                                                                    \"type\" to 1,\r\n                                                                    \"read\" to false,\r\n                                                                    \"timestamp\" to FieldValue.serverTimestamp()\r\n\r\n                                                                )\r\n                                                            )\r\n                                                            ?.addOnSuccessListener {}\r\n                                                            ?.addOnFailureListener {}\r\n\r\n                                                        // 상대방 노티피케이션\r\n                                                        firestore?.collection(\"Account\")\r\n                                                            ?.document(item.uid.toString())\r\n                                                            ?.collection(\"Notification\")\r\n                                                            ?.document(\"${currentUser}\")\r\n                                                            ?.set(\r\n                                                                hashMapOf(\r\n                                                                    \"requestUserId\" to currentUser,\r\n                                                                    \"userName\" to indexname,\r\n                                                                    \"userColor\" to indexcolor,\r\n                                                                    \"type\" to 1,\r\n                                                                    \"read\" to false,\r\n                                                                    \"timestamp\" to FieldValue.serverTimestamp()\r\n\r\n                                                                )\r\n                                                            )\r\n                                                            ?.addOnSuccessListener {\r\n                                                            }\r\n                                                            ?.addOnFailureListener {\r\n                                                            }\r\n\r\n                                                    }\r\n                                                }\r\n\r\n                                        }\r\n                                    }\r\n                            }\r\n                    } else {\r\n                        Toast.makeText(\r\n                            this@AddFriendActivity,\r\n                            \"자기자신을 친구로 추가할 수 없습니다.\", Toast.LENGTH_SHORT\r\n                        ).show()\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // 리사이클러뷰의 아이템 총 개수 반환\r\n        override fun getItemCount(): Int {\r\n            return friend_add.size\r\n        }\r\n\r\n        //관리자(신고)Dialog\r\n        fun callDialog(context: Context, item: Friend) {\r\n\r\n            dialog = ReportDialog(\r\n                context = context,\r\n                userColor = item.userColor,\r\n                userName = item.userName,\r\n                uid = item.uid,\r\n                userMessage = item.userMessage,\r\n                email = item.email!!,\r\n                namebtnListener = reNameListener,\r\n                messagebtnListener = reMessageListener,\r\n                blockbtnListener = blockbtnListener\r\n            )\r\n\r\n            //다이얼로그 타이틀 및 테두리 없애기\r\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n            dialog.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\r\n            dialog.show()\r\n        }\r\n\r\n        //닉네임 신고 버튼 클릭 시\r\n        private val reNameListener = View.OnClickListener {\r\n            index = UUID.randomUUID().toString()\r\n            firestore?.collection(\"Manager\")?.document(\"$index\")\r\n                ?.set(\r\n                    hashMapOf(\r\n                        \"userName\" to dialog.userName,\r\n                        \"email\" to dialog.email,\r\n                        \"index\" to index,\r\n                        \"id\" to dialog.uid,\r\n                    )\r\n                )\r\n\r\n            Toast.makeText(\r\n                this@AddFriendActivity,\r\n                \"닉네임 신고가 되었습니다.\",\r\n                Toast.LENGTH_SHORT\r\n            ).show()\r\n        }\r\n\r\n\r\n        //상태 메세지 신고 버튼 클릭 시\r\n        private val reMessageListener = View.OnClickListener {\r\n            msgindex = UUID.randomUUID().toString()\r\n            firestore?.collection(\"Manager\")?.document(\"$msgindex\")\r\n                ?.set(\r\n                    hashMapOf(\r\n                        \"userMessage\" to dialog.userMessage,\r\n                        \"email\" to dialog.email,\r\n                        \"msgindex\" to msgindex,\r\n                        \"id\" to dialog.uid,\r\n                    )\r\n                )\r\n            Toast.makeText(\r\n                this@AddFriendActivity,\r\n                \"상태 메세지 신고가 되었습니다.\",\r\n                Toast.LENGTH_SHORT\r\n            ).show()\r\n        }\r\n\r\n\r\n        //차단 버튼 클릭 시\r\n        private val blockbtnListener = View.OnClickListener {\r\n            Toast.makeText(\r\n                this@AddFriendActivity,\r\n                \"차단 되었습니다.\",\r\n                Toast.LENGTH_SHORT\r\n            ).show()\r\n        }\r\n\r\n\r\n        // 파이어스토어에서 데이터를 불러와서 검색어가 있는지 판단\r\n        fun search(searchWord: String) {\r\n            firestore?.collection(\"Account\")\r\n                ?.addSnapshotListener { querySnapshot, firebaseFirestoreException ->\r\n                    // ArrayList 비워줌\r\n                    friend_add.clear()\r\n\r\n                    for (snapshot in querySnapshot!!.documents) {\r\n                        //에러처리(안 해주면 오류)\r\n                        if (snapshot.getString(\"email\") != null && snapshot.getString(\"userName\") != null)\r\n                            if (snapshot.getString(\"email\")!!\r\n                                    .contains(searchWord) || snapshot.getString(\"userName\")!!\r\n                                    .contains(searchWord)\r\n                            ) {\r\n                                val item = snapshot.toObject(Friend::class.java)\r\n                                friend_add.add(item!!)\r\n                            }\r\n                    }\r\n                    searchcount = friend_add.size\r\n                    getCount()\r\n                    notifyDataSetChanged()\r\n                }\r\n        }\r\n    }\r\n\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/goaltracker/AddFriendActivity.kt b/app/src/main/java/com/example/goaltracker/AddFriendActivity.kt
---- a/app/src/main/java/com/example/goaltracker/AddFriendActivity.kt	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-+++ b/app/src/main/java/com/example/goaltracker/AddFriendActivity.kt	(date 1672567635973)
-@@ -19,6 +19,7 @@
- import androidx.appcompat.app.AppCompatActivity
- import androidx.recyclerview.widget.LinearLayoutManager
- import androidx.recyclerview.widget.RecyclerView
-+import com.google.android.material.snackbar.Snackbar
- import com.google.firebase.auth.ktx.auth
- import com.google.firebase.firestore.FieldValue
- import com.google.firebase.firestore.FirebaseFirestore
-@@ -51,6 +52,9 @@
-         super.onCreate(savedInstanceState)
-         setContentView(R.layout.activity_add_friend)
- 
-+
-+
-+
-         searchWord.addTextChangedListener(object : TextWatcher {
- 
-             //텍스트가 변경되기 바로 이전에 동작
-@@ -86,6 +90,7 @@
-         }
- 
- 
-+
-     }
- 
-     //인원 카운트
-@@ -99,6 +104,7 @@
-         // Friend 클래스 ArrayList 생성성
-         var friend_add: ArrayList<Friend> = arrayListOf()
- 
-+
-         init {  // Account의 문서를 불러온 뒤 Friend으로 변환해 ArrayList에 담음
-             firestore?.collection("Account")
-                 ?.addSnapshotListener { querySnapshot, firebaseFirestoreException ->
-@@ -114,7 +120,9 @@
-                     notifyDataSetChanged()
-                 }
- 
-+
-         }
-+
- 
-         // xml파일을 inflate하여 ViewHolder를 생성
-         override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {
-@@ -200,232 +208,259 @@
-             //친구 추가 버튼
-             @SuppressLint("SuspiciousIndentation")
-             fun AddFriendBtnOnclick(item: Friend) {
--                AddBtn.setOnClickListener {
--                    val nowTime = System.currentTimeMillis()
--                    val timeformatter = SimpleDateFormat("yyyy.MM.dd.hh.mm")
--                    val dateTime = timeformatter.format(nowTime)
--                    if (item.uid != currentUser) {
--                        firestore?.collection("Account")?.document("$currentUser")?.get()
--                            ?.addOnSuccessListener { document ->
--                                if (document != null) {
--                                    // 현재 사용자 이름이랑 이메일, 색상 받아오기
--                                    indexname = document.data?.get("userName").toString()
--                                    indexemail = document.data?.get("email").toString()
--                                    indexcolor = document.data?.get("userColor").toString()
--                                }
-+                val friendList: ArrayList<String> =
-+                    MySharedPreferences.getFriendList(this@AddFriendActivity)
-+
-+                if (friendList.contains(item.uid.toString())) {
-+                    AddBtn.text = "신청 보냄"
-+                    AddBtn.isEnabled = false
-+                }
-+                if (!friendList.contains(item.uid.toString())) {
-+                    AddBtn.text = "친구 요청"
-+                    AddBtn.setOnClickListener {
-+                        try {
-+                            val nowTime = System.currentTimeMillis()
-+                            val timeformatter = SimpleDateFormat("yyyy.MM.dd.hh.mm")
-+                            val dateTime = timeformatter.format(nowTime)
-+                            if (item.uid != currentUser) {
-+                                firestore?.collection("Account")?.document("$currentUser")?.get()
-+                                    ?.addOnSuccessListener { document ->
-+                                        if (document != null) {
-+                                            // 현재 사용자 이름이랑 이메일, 색상 받아오기
-+                                            indexname = document.data?.get("userName").toString()
-+                                            indexemail = document.data?.get("email").toString()
-+                                            indexcolor = document.data?.get("userColor").toString()
-+                                        }
- 
--                                firestore?.collection("Account")?.document("$currentUser")
--                                    ?.collection("Friend")
--                                    ?.whereEqualTo("uid", item.uid.toString())?.get()
--                                    ?.addOnCompleteListener { task ->
-+                                        firestore?.collection("Account")?.document("$currentUser")
-+                                            ?.collection("Friend")
-+                                            ?.whereEqualTo("uid", item.uid.toString())?.get()
-+                                            ?.addOnCompleteListener { task ->
- 
- 
--                                        // 친구 리스트가 없는 경우
--                                        if (task.result?.size() == 0) {
--                                            // 내 친구 목록
--                                            firestore?.collection("Account")
--                                                ?.document("$currentUser")
--                                                ?.collection("Friend")
--                                                ?.document("${item.uid}")
--                                                ?.set(
--                                                    hashMapOf(
--                                                        "uid" to item.uid,
--                                                        "status" to "request",
--                                                        "userName" to item.userName,
--                                                        "email" to item.email,
--                                                        "userColor" to item.userColor
-+                                                // 친구 리스트가 없는 경우
-+                                                if (task.result?.size() == 0) {
-+                                                    // 내 친구 목록
-+                                                    firestore?.collection("Account")
-+                                                        ?.document("$currentUser")
-+                                                        ?.collection("Friend")
-+                                                        ?.document("${item.uid}")
-+                                                        ?.set(
-+                                                            hashMapOf(
-+                                                                "uid" to item.uid,
-+                                                                "status" to "request",
-+                                                                "userName" to item.userName,
-+                                                                "email" to item.email,
-+                                                                "userColor" to item.userColor
- 
--                                                    )
--                                                )
--                                                ?.addOnSuccessListener {
--                                                    Toast.makeText(
--                                                        this@AddFriendActivity,
--                                                        "친구 신청을 보냈습니다.",
--                                                        Toast.LENGTH_SHORT
--                                                    ).show()
-+                                                            )
-+                                                        )
-+                                                        ?.addOnSuccessListener {
-+                                                            Toast.makeText(
-+                                                                this@AddFriendActivity,
-+                                                                "친구 신청을 보냈습니다.",
-+                                                                Toast.LENGTH_SHORT
-+                                                            ).show()
- 
--                                                }
--                                                ?.addOnFailureListener {}
-+                                                            AddBtn.text = "신청 보냄"
-+                                                            AddBtn.isEnabled = false
-+
-+                                                        }
-+                                                        ?.addOnFailureListener {}
- 
--                                            // 상대방 친구 목록
--                                            firestore?.collection("Account")
--                                                ?.document(item.uid.toString())
--                                                ?.collection("Friend")
--                                                ?.document("${currentUser}")
--                                                ?.set(
--                                                    hashMapOf(
--                                                        "uid" to currentUser,
--                                                        "status" to "accept",
--                                                        "userName" to indexname,
--                                                        "email" to indexemail,
--                                                        "userColor" to indexcolor
-+                                                    // 상대방 친구 목록
-+                                                    firestore?.collection("Account")
-+                                                        ?.document(item.uid.toString())
-+                                                        ?.collection("Friend")
-+                                                        ?.document("${currentUser}")
-+                                                        ?.set(
-+                                                            hashMapOf(
-+                                                                "uid" to currentUser,
-+                                                                "status" to "accept",
-+                                                                "userName" to indexname,
-+                                                                "email" to indexemail,
-+                                                                "userColor" to indexcolor
- 
--                                                    )
--                                                )
--                                                ?.addOnSuccessListener {
--                                                }
--                                                ?.addOnFailureListener {
--                                                }
-+                                                            )
-+                                                        )
-+                                                        ?.addOnSuccessListener {
-+                                                        }
-+                                                        ?.addOnFailureListener {
-+                                                        }
- 
--                                            //내 노티피케이션
--                                            firestore?.collection("Account")
--                                                ?.document("$currentUser")
--                                                ?.collection("Notification")
--                                                ?.document("${item.uid}")
--                                                ?.set(
--                                                    hashMapOf(
--                                                        "requestUserId" to item.uid,
--                                                        "userName" to item.userName,
--                                                        "userColor" to item.userColor,
--                                                        "type" to 1,
--                                                        "read" to false,
--                                                        "timestamp" to FieldValue.serverTimestamp()
-+                                                    //내 노티피케이션
-+                                                    firestore?.collection("Account")
-+                                                        ?.document("$currentUser")
-+                                                        ?.collection("Notification")
-+                                                        ?.document("${item.uid}")
-+                                                        ?.set(
-+                                                            hashMapOf(
-+                                                                "requestUserId" to item.uid,
-+                                                                "userName" to item.userName,
-+                                                                "userColor" to item.userColor,
-+                                                                "type" to 1,
-+                                                                "read" to false,
-+                                                                "timestamp" to FieldValue.serverTimestamp()
- 
--                                                    )
--                                                )
--                                                ?.addOnSuccessListener {}
--                                                ?.addOnFailureListener {}
-+                                                            )
-+                                                        )
-+                                                        ?.addOnSuccessListener {}
-+                                                        ?.addOnFailureListener {}
- 
--                                            // 상대방 노티피케이션
--                                            firestore?.collection("Account")
--                                                ?.document(item.uid.toString())
--                                                ?.collection("Notification")
--                                                ?.document("${currentUser}")
--                                                ?.set(
--                                                    hashMapOf(
--                                                        "requestUserId" to currentUser,
--                                                        "userName" to indexname,
--                                                        "userColor" to indexcolor,
--                                                        "type" to 1,
--                                                        "read" to false,
--                                                        "timestamp" to FieldValue.serverTimestamp()
-+                                                    // 상대방 노티피케이션
-+                                                    firestore?.collection("Account")
-+                                                        ?.document(item.uid.toString())
-+                                                        ?.collection("Notification")
-+                                                        ?.document("${currentUser}")
-+                                                        ?.set(
-+                                                            hashMapOf(
-+                                                                "requestUserId" to currentUser,
-+                                                                "userName" to indexname,
-+                                                                "userColor" to indexcolor,
-+                                                                "type" to 1,
-+                                                                "read" to false,
-+                                                                "timestamp" to FieldValue.serverTimestamp()
- 
--                                                    )
--                                                )
--                                                ?.addOnSuccessListener {
--                                                }
--                                                ?.addOnFailureListener {
--                                                }
-+                                                            )
-+                                                        )
-+                                                        ?.addOnSuccessListener {
-+                                                        }
-+                                                        ?.addOnFailureListener {
-+                                                        }
- 
--                                        }
-+                                                }
- 
--                                        // 친구 리스트가 있는 경우
--                                        else {
--                                            var notFriend = true
--                                            // 이미 친구임
--                                            firestore?.collection("Account")
--                                                ?.document("$currentUser")
--                                                ?.collection("Friend")
--                                                ?.document("${item.uid}")?.get()
--                                                ?.addOnSuccessListener { document ->
--                                                    if (document != null) {
--                                                        Toast.makeText(
--                                                            this@AddFriendActivity,
--                                                            "이미 친구입니다.",
--                                                            Toast.LENGTH_SHORT
--                                                        ).show()
--                                                        notFriend = false
-+                                                // 친구 리스트가 있는 경우
-+                                                else {
-+                                                    var notFriend = true
-+                                                    // 이미 친구임
-+                                                    firestore?.collection("Account")
-+                                                        ?.document("$currentUser")
-+                                                        ?.collection("Friend")
-+                                                        ?.document("${item.uid}")?.get()
-+                                                        ?.addOnSuccessListener { document ->
-+                                                            if (document != null) {
-+                                                                Toast.makeText(
-+                                                                    this@AddFriendActivity,
-+                                                                    "이미 친구입니다.",
-+                                                                    Toast.LENGTH_SHORT
-+                                                                ).show()
-+                                                                notFriend = false
- 
--                                                    }
-+                                                            }
- 
--                                                    if (notFriend) {
--                                                        // 내 친구 목록
--                                                        firestore?.collection("Account")
--                                                            ?.document("$currentUser")
--                                                            ?.collection("Friend")
--                                                            ?.document("${item.uid}")
--                                                            ?.set(
--                                                                hashMapOf(
--                                                                    "uid" to item.uid,
--                                                                    "status" to "request",
--                                                                    "userName" to item.userName,
--                                                                    "email" to item.email,
--                                                                    "userColor" to item.userColor
-+                                                            if (notFriend) {
-+                                                                // 내 친구 목록
-+                                                                firestore?.collection("Account")
-+                                                                    ?.document("$currentUser")
-+                                                                    ?.collection("Friend")
-+                                                                    ?.document("${item.uid}")
-+                                                                    ?.set(
-+                                                                        hashMapOf(
-+                                                                            "uid" to item.uid,
-+                                                                            "status" to "request",
-+                                                                            "userName" to item.userName,
-+                                                                            "email" to item.email,
-+                                                                            "userColor" to item.userColor
- 
--                                                                )
--                                                            )
--                                                            ?.addOnSuccessListener {
--                                                                Toast.makeText(
--                                                                    this@AddFriendActivity,
--                                                                    "친구 신청을 보냈습니다.",
--                                                                    Toast.LENGTH_SHORT
--                                                                ).show()
-+                                                                        )
-+                                                                    )
-+                                                                    ?.addOnSuccessListener {
-+                                                                        Toast.makeText(
-+                                                                            this@AddFriendActivity,
-+                                                                            "친구 신청을 보냈습니다.",
-+                                                                            Toast.LENGTH_SHORT
-+                                                                        ).show()
- 
--                                                            }
--                                                            ?.addOnFailureListener {}
-+                                                                        AddBtn.text = "신청 보냄"
-+                                                                        AddBtn.isEnabled = false
-+
-+
-+                                                                    }
-+                                                                    ?.addOnFailureListener {}
- 
--                                                        // 상대방 친구 목록
--                                                        firestore?.collection("Account")
--                                                            ?.document(item.uid.toString())
--                                                            ?.collection("Friend")
--                                                            ?.document("${currentUser}")
--                                                            ?.set(
--                                                                hashMapOf(
--                                                                    "uid" to currentUser,
--                                                                    "status" to "accept",
--                                                                    "userName" to indexname,
--                                                                    "email" to indexemail,
--                                                                    "userColor" to indexcolor
-+                                                                // 상대방 친구 목록
-+                                                                firestore?.collection("Account")
-+                                                                    ?.document(item.uid.toString())
-+                                                                    ?.collection("Friend")
-+                                                                    ?.document("${currentUser}")
-+                                                                    ?.set(
-+                                                                        hashMapOf(
-+                                                                            "uid" to currentUser,
-+                                                                            "status" to "accept",
-+                                                                            "userName" to indexname,
-+                                                                            "email" to indexemail,
-+                                                                            "userColor" to indexcolor
- 
--                                                                )
--                                                            )
--                                                            ?.addOnSuccessListener {
--                                                            }
--                                                            ?.addOnFailureListener {
--                                                            }
-+                                                                        )
-+                                                                    )
-+                                                                    ?.addOnSuccessListener {
-+                                                                    }
-+                                                                    ?.addOnFailureListener {
-+                                                                    }
- 
- 
--                                                        //내 노티피케이션
--                                                        firestore?.collection("Account")
--                                                            ?.document("$currentUser")
--                                                            ?.collection("Notification")
--                                                            ?.document("${item.uid}")
--                                                            ?.set(
--                                                                hashMapOf(
--                                                                    "requestUserId" to item.uid,
--                                                                    "userName" to item.userName,
--                                                                    "userColor" to item.userColor,
--                                                                    "type" to 1,
--                                                                    "read" to false,
--                                                                    "timestamp" to FieldValue.serverTimestamp()
-+                                                                //내 노티피케이션
-+                                                                firestore?.collection("Account")
-+                                                                    ?.document("$currentUser")
-+                                                                    ?.collection("Notification")
-+                                                                    ?.document("${item.uid}")
-+                                                                    ?.set(
-+                                                                        hashMapOf(
-+                                                                            "requestUserId" to item.uid,
-+                                                                            "userName" to item.userName,
-+                                                                            "userColor" to item.userColor,
-+                                                                            "type" to 1,
-+                                                                            "read" to false,
-+                                                                            "timestamp" to FieldValue.serverTimestamp()
- 
--                                                                )
--                                                            )
--                                                            ?.addOnSuccessListener {}
--                                                            ?.addOnFailureListener {}
-+                                                                        )
-+                                                                    )
-+                                                                    ?.addOnSuccessListener {}
-+                                                                    ?.addOnFailureListener {}
- 
--                                                        // 상대방 노티피케이션
--                                                        firestore?.collection("Account")
--                                                            ?.document(item.uid.toString())
--                                                            ?.collection("Notification")
--                                                            ?.document("${currentUser}")
--                                                            ?.set(
--                                                                hashMapOf(
--                                                                    "requestUserId" to currentUser,
--                                                                    "userName" to indexname,
--                                                                    "userColor" to indexcolor,
--                                                                    "type" to 1,
--                                                                    "read" to false,
--                                                                    "timestamp" to FieldValue.serverTimestamp()
-+                                                                // 상대방 노티피케이션
-+                                                                firestore?.collection("Account")
-+                                                                    ?.document(item.uid.toString())
-+                                                                    ?.collection("Notification")
-+                                                                    ?.document("${currentUser}")
-+                                                                    ?.set(
-+                                                                        hashMapOf(
-+                                                                            "requestUserId" to currentUser,
-+                                                                            "userName" to indexname,
-+                                                                            "userColor" to indexcolor,
-+                                                                            "type" to 1,
-+                                                                            "read" to false,
-+                                                                            "timestamp" to FieldValue.serverTimestamp()
- 
--                                                                )
--                                                            )
--                                                            ?.addOnSuccessListener {
--                                                            }
--                                                            ?.addOnFailureListener {
--                                                            }
-+                                                                        )
-+                                                                    )
-+                                                                    ?.addOnSuccessListener {
-+                                                                    }
-+                                                                    ?.addOnFailureListener {
-+                                                                    }
- 
--                                                    }
--                                                }
-+
-+                                                            }
-+
-+                                                        }
- 
--                                        }
--                                    }
--                            }
--                    } else {
--                        Toast.makeText(
--                            this@AddFriendActivity,
--                            "자기자신을 친구로 추가할 수 없습니다.", Toast.LENGTH_SHORT
--                        ).show()
-+                                                }
-+                                            }
-+                                    }
-+
-+                            } else {
-+                                Toast.makeText(
-+                                    this@AddFriendActivity,
-+                                    "자기자신을 친구로 추가할 수 없습니다.", Toast.LENGTH_SHORT
-+                                ).show()
-+                            }
-+                        } catch (e: IllegalArgumentException) {
-+                            Toast.makeText(
-+                                this@AddFriendActivity,
-+                                "친구 신청에 실패헸습니다.", Toast.LENGTH_SHORT
-+                            ).show()
-+                        }
-                     }
-                 }
-             }
-@@ -532,6 +567,7 @@
-                     notifyDataSetChanged()
-                 }
-         }
-+
-     }
- 
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/goaltracker/MainActivity.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.goaltracker\r\n\r\nimport android.content.ContentValues\r\nimport android.content.ContentValues.TAG\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.GradientDrawable\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.widget.Toast\r\nimport android.view.MenuItem\r\nimport android.widget.TextView\r\nimport androidx.core.view.GravityCompat\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.android.material.navigation.NavigationView\r\nimport com.google.firebase.auth.FirebaseAuth\r\nimport com.google.firebase.firestore.DocumentSnapshot\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.firestore.QuerySnapshot\r\nimport kotlinx.android.synthetic.main.activity_main.*\r\nimport kotlinx.android.synthetic.main.drawer_header.view.*\r\nimport kotlinx.android.synthetic.main.drawer_main.*\r\nimport kotlinx.android.synthetic.main.main_toolbar.*\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\nclass MainActivity : AppCompatActivity(), NavigationView.OnNavigationItemSelectedListener {\r\n    val db = FirebaseFirestore.getInstance()\r\n    val firebaseAuth =FirebaseAuth.getInstance()\r\n\r\n    lateinit var goalRecordOngoingAdapter: GoalRecordAdapter\r\n    val onGoingGoalDatas = ArrayList<GoalRecordData>()\r\n\r\n    private lateinit var rv_goal : RecyclerView\r\n\r\n    var curUser = Account()\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n\r\n        var accountUId : String?=\"\"\r\n        accountUId = firebaseAuth?.currentUser?.uid.toString()\r\n\r\n        db?.collection(\"Account\")?.document(accountUId)?.get()?.addOnSuccessListener {\r\n            curUser = it.toObject(Account::class.java)!!\r\n            val color = curUser.userColor.toString()\r\n            MySharedPreferences.setUserId(this, accountUId)\r\n            MySharedPreferences.setUserEmail(this, curUser.email)\r\n            MySharedPreferences.setUserNickname(this, curUser.userName.toString())\r\n            MySharedPreferences.setUserColor(this, color)\r\n            MySharedPreferences.setUserColorInt(this, color)\r\n            MySharedPreferences.setTheme(this, color)\r\n            MySharedPreferences.setGoalList(this, curUser.myGoalList)\r\n        }\r\n\r\n        db?.collection(\"Account\")\r\n            ?.document(accountUId)\r\n            ?.collection(\"Friend\")\r\n            ?.whereEqualTo(\"status\", \"friend\")\r\n            ?.get()\r\n            ?.addOnSuccessListener { friendList ->\r\n                Log.d(\"status가 friend인 문서 개수\", friendList.size().toString())\r\n                val friendDocuments: MutableList<DocumentSnapshot> = friendList.documents\r\n                var friendsUId : ArrayList<String> ?= arrayListOf()\r\n                for (document in friendDocuments) {\r\n                    friendsUId?.add(document.id)\r\n                }\r\n                if (friendsUId != null) {\r\n                    MySharedPreferences.setFriendList(this, friendsUId)\r\n                }\r\n                val list : ArrayList<String> = MySharedPreferences.getFriendList(this)\r\n                if (list!=null) {\r\n                    for (value in list) {\r\n                        Log.d(\"mysharedpreferences에 저장된 friend\", value)\r\n                    }\r\n                }\r\n            }\r\n\r\n        setTheme(MySharedPreferences.getTheme(this))\r\n        setContentView(R.layout.drawer_main)\r\n\r\n        setSupportActionBar(main_toolbar) //툴바를 액티비티의 앱바로 지정\r\n        supportActionBar?.setDisplayShowTitleEnabled(false)  //툴바에 타이틀 안보이게\r\n\r\n        //네비게이션 드로어 내에 있는 화면의 이벤트를 처리하기 위해 생성\r\n        nav_view.setNavigationItemSelectedListener(this) //Navigation 리스너\r\n\r\n        val curUserName = findViewById<TextView>(R.id.user_name)\r\n        val nav_header = nav_view.getHeaderView(0)\r\n        val navUserName = nav_header.findViewById<TextView>(R.id.nav_userName)\r\n        val navUserEmail = nav_header.findViewById<TextView>(R.id.nav_userId)\r\n        var navUserProfile :GradientDrawable = nav_header.nav_profile_icon.background as GradientDrawable\r\n        val navUserNameShort = nav_header.findViewById<TextView>(R.id.nav_profile_name)\r\n\r\n        curUserName.text = MySharedPreferences.getUserNickname(this)\r\n        navUserName.text = MySharedPreferences.getUserNickname(this)\r\n        navUserEmail.text = MySharedPreferences.getUserEmail(this)\r\n        navUserProfile.setColor(Color.parseColor(MySharedPreferences.getUserColor(this)))\r\n        navUserNameShort.text = MySharedPreferences.getUserNickname(this).substring(0 until 1)\r\n\r\n        val notReadNotices = arrayListOf<Notifications>()\r\n        db?.collection(\"Account\")\r\n            ?.document(accountUId)\r\n            ?.collection(\"Notification\")\r\n            ?.whereArrayContains(\"read\", false)?.addSnapshotListener { querySnapshot, firebaseFirestoreException ->\r\n                notReadNotices.clear()\r\n\r\n                for (snapshot in querySnapshot!!.documents) {\r\n                    var item = snapshot.toObject(Notifications::class.java)\r\n//                    Log.d(\"item\", item.toString())\r\n                    notReadNotices.add(item!!)\r\n                }\r\n\r\n                if (notReadNotices.isNotEmpty()) {\r\n                    alarmButton.setBackgroundResource(R.drawable.alarm_close)\r\n                }\r\n            }\r\n\r\n        // --------------------------------골 추가 버튼 연결--------------------------------------- //\r\n\r\n        goalAddButton.setOnClickListener{\r\n            startActivity(Intent(this, AddGoal::class.java))\r\n        }\r\n\r\n        // ------------------------------------------------------------------------------------- //\r\n\r\n\r\n        //버튼 클릭시 동작\r\n        alarmButton.setOnClickListener {\r\n            alarmButton.setBackgroundResource(R.drawable.alarmbtn)\r\n            startActivity(Intent(this, NoticeActivity::class.java))\r\n        }\r\n\r\n        menubtn.setOnClickListener {\r\n            drawer_layout.openDrawer(GravityCompat.END)\r\n        }\r\n\r\n        rv_goal = findViewById(R.id.rv_goal)\r\n\r\n        goalRecordOngoingAdapter = GoalRecordAdapter(this)\r\n        rv_goal.adapter = goalRecordOngoingAdapter\r\n\r\n        // 추후엔 Dataframe에서 가져다 사용하기\r\n//        val temp_goal_list = arrayOf(\"b9ae2c85-c200-43a8-8840-1670896f93b6\")\r\n\r\n        db.collection(\"Account\").document(accountUId).get().addOnSuccessListener {\r\n            curUser = it.toObject(Account::class.java)!!\r\n            curUser.myGoalList?.forEach { goal_id ->\r\n                Log.d(TAG, \"goal id : $goal_id\")\r\n                val goal_db = db.collection(\"Goal\").document(goal_id)\r\n\r\n                goal_db.addSnapshotListener { snapshot, e ->\r\n                    var teamNameList = arrayListOf<String>()\r\n                    var teamThemeList = arrayListOf<String>()\r\n                    val goal_day = snapshot?.get(\"day\").toString().toInt()\r\n                    val start_day = snapshot?.get(\"startDay\").toString()\r\n                    val start_day_str = start_day.replace(\"-\", \".\")\r\n                    val end_day = snapshot?.get(\"endDay\").toString()\r\n                    val end_day_str = end_day.replace(\"-\", \".\")\r\n                    val past_date = pastCalc(start_day);\r\n\r\n                    val title = snapshot?.get(\"title\") as String\r\n\r\n                    if (past_date <= goal_day) {\r\n                        // 데이터 한 번만 가져오기\r\n                        db.collection(\"Goal\").document(goal_id).collection(\"team\")\r\n                            .whereEqualTo(\"request\", true)\r\n                            .get()\r\n                            .addOnSuccessListener { result ->\r\n                                for (document in result) {\r\n                                    teamNameList.add(document[\"userName\"].toString())\r\n                                    teamThemeList.add(document[\"profileColor\"].toString())\r\n                                }\r\n\r\n                                onGoingGoalDatas.add(\r\n                                    GoalRecordData(\r\n                                        goalId = goal_id,\r\n                                        title = title,\r\n                                        participateNum = result.size(),\r\n                                        startDate = start_day_str,\r\n                                        endDate = end_day_str,\r\n                                        todayNum = past_date,\r\n                                        stampNum = goal_day,\r\n                                        teamNameList = teamNameList,\r\n                                        teamThemeList = teamThemeList\r\n                                    )\r\n                                )\r\n\r\n                                goalRecordOngoingAdapter.goalDatas = onGoingGoalDatas\r\n                                goalRecordOngoingAdapter.notifyDataSetChanged()\r\n                            }\r\n                            .addOnFailureListener { exception ->\r\n                                Log.d(ContentValues.TAG, \"Error getting documents: \", exception)\r\n                            }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    override fun onNavigationItemSelected(item: MenuItem): Boolean {\r\n        when(item.itemId){\r\n            R.id.nav_goalAchieve-> {\r\n                startActivity(Intent(this, GoalRecordActivity::class.java))\r\n            }\r\n            R.id.nav_friendList->{\r\n                startActivity(Intent(this, FriendActivity::class.java))\r\n            }\r\n            R.id.nav_notice->{\r\n                startActivity(Intent(this, AnnouncementActivity::class.java))\r\n            }\r\n            R.id.nav_settings-> {\r\n                val dialog = ProfileSettingDialog(this)\r\n                dialog.showDialog()\r\n                onBackPressed()\r\n                dialog.setOnClickListener(object: ProfileSettingDialog.OnDialogClickListener {\r\n                    override fun onClicked(name: String) {\r\n                        Toast.makeText(this@MainActivity, \"프로필 변경됨\", Toast.LENGTH_SHORT).show()\r\n                    }\r\n                })\r\n            }\r\n            R.id.nav_changePW -> {\r\n                val dialog = ChangePWDialog(this)\r\n                dialog.showDialog()\r\n                onBackPressed()\r\n                dialog.setOnClickListener(object: ChangePWDialog.OnDialogClickListener {\r\n                    override fun onClicked(name: String) {\r\n                        Toast.makeText(this@MainActivity, \"비밀번호가 변경되었습니다.\", Toast.LENGTH_SHORT).show()\r\n                    }\r\n                })\r\n            }\r\n            R.id.nav_logOut-> {\r\n                if (firebaseAuth?.currentUser != null) {\r\n                    firebaseAuth?.signOut()\r\n                    onBackPressed()\r\n                    startActivity(Intent(this, LoginActivity::class.java))\r\n                } else {\r\n                    throw Exception (\"현재 유저가 없습니다.\")\r\n                }\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    override fun onBackPressed() {\r\n        if (drawer_layout.isDrawerOpen(GravityCompat.END)) {\r\n            drawer_layout.closeDrawers()\r\n//            Toast.makeText(this, \"back btn clicked\", Toast.LENGTH_SHORT).show()\r\n        } else {\r\n            super.onBackPressed()\r\n        }\r\n    }\r\n\r\n    private fun pastCalc(first_day: String): Int {\r\n        var today = Calendar.getInstance()\r\n\r\n        var first_date = first_day + \" 00:00:00\"\r\n        var sf = SimpleDateFormat(\"yyyy-MM-dd 00:00:00\")\r\n        var date = sf.parse(first_date)\r\n\r\n        var calcDate = (today.time.time - date.time) / (60 * 60 * 24 * 1000)\r\n\r\n        Log.d(\"test: 날짜!!\", \"$calcDate 일 차이남!!\")\r\n\r\n        return (calcDate+1).toInt()\r\n    }\r\n}\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/goaltracker/MainActivity.kt b/app/src/main/java/com/example/goaltracker/MainActivity.kt
---- a/app/src/main/java/com/example/goaltracker/MainActivity.kt	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-+++ b/app/src/main/java/com/example/goaltracker/MainActivity.kt	(date 1672634363051)
-@@ -266,5 +266,4 @@
- 
-         return (calcDate+1).toInt()
-     }
--}
--
-+}
-\ No newline at end of file
-Index: .idea/deploymentTargetDropDown.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetDropDown\">\r\n    <targetSelectedWithDropDown>\r\n      <Target>\r\n        <type value=\"QUICK_BOOT_TARGET\" />\r\n        <deviceKey>\r\n          <Key>\r\n            <type value=\"VIRTUAL_DEVICE_PATH\" />\r\n            <value value=\"C:\\Users\\82104\\.android\\avd\\Pixel_3_API_30.avd\" />\r\n          </Key>\r\n        </deviceKey>\r\n      </Target>\r\n    </targetSelectedWithDropDown>\r\n    <timeTargetWasSelectedWithDropDown value=\"2022-12-08T15:30:02.488601600Z\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
---- a/.idea/deploymentTargetDropDown.xml	(revision 9bdaff85188b426b0aee28e72e67393bce8de609)
-+++ b/.idea/deploymentTargetDropDown.xml	(date 1672640786198)
-@@ -1,9 +1,9 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
-   <component name="deploymentTargetDropDown">
--    <targetSelectedWithDropDown>
-+    <runningDeviceTargetSelectedWithDropDown>
-       <Target>
--        <type value="QUICK_BOOT_TARGET" />
-+        <type value="RUNNING_DEVICE_TARGET" />
-         <deviceKey>
-           <Key>
-             <type value="VIRTUAL_DEVICE_PATH" />
-@@ -11,7 +11,7 @@
-           </Key>
-         </deviceKey>
-       </Target>
--    </targetSelectedWithDropDown>
--    <timeTargetWasSelectedWithDropDown value="2022-12-08T15:30:02.488601600Z" />
-+    </runningDeviceTargetSelectedWithDropDown>
-+    <timeTargetWasSelectedWithDropDown value="2023-01-02T06:24:31.873092100Z" />
-   </component>
- </project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023-01-06__2_01__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-06__2_01__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-06__2_01__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-06__2_01__Changes_.xml	(revision 7bdfde0ce23f04515896a615659fbc49c89b7136)
+++ /dev/null	(revision 7bdfde0ce23f04515896a615659fbc49c89b7136)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2023-01-06_오후_2_01_[Changes]" date="1672981313728" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-06_오후_2_01_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2023-01-06 오후 2:01 [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023-01-06_오후_2_01_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-06_오후_2_01_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-06_오후_2_01_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-06_오후_2_01_[Changes]/shelved.patch	(revision 7bdfde0ce23f04515896a615659fbc49c89b7136)
+++ /dev/null	(revision 7bdfde0ce23f04515896a615659fbc49c89b7136)
@@ -1,28 +0,0 @@
-Index: app/src/main/AndroidManifest.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.example.goaltracker\">\r\n\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.CAMERA\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n\r\n    <uses-feature\r\n        android:name=\"android.hardware.camera\"\r\n        android:required=\"true\" /> <!-- 인터넷 권한 -->\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.GoalTracker\">\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"false\">\r\n        </activity>\r\n        <activity\r\n            android:name=\".EditGoalActivity\"\r\n            android:exported=\"true\"></activity>\r\n        <activity\r\n            android:name=\".AnnouncementActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".GoalRecordActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".StampUploadDialogActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.StampUploadDialog\"></activity>\r\n        <activity\r\n            android:name=\".JoinActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".FriendActivity\"\r\n            android:exported=\"true\"></activity>\r\n        <activity\r\n            android:name=\".AddFriendActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".AddGoal\"\r\n            android:exported=\"true\"></activity>\r\n        <activity\r\n            android:name=\".StampBoardActivity\"\r\n            android:exported=\"true\"></activity>\r\n        <activity\r\n            android:name=\".GoogleLogin\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".FacebookLogin\"\r\n            android:exported=\"true\" />\r\n\r\n        <activity\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\"></activity>\r\n        <activity\r\n            android:name=\".ProfileActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".SplashActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n        <activity\r\n            android:name=\".NoticeActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".AppNotifyActivity\"\r\n            android:exported=\"true\" />\r\n\r\n        <meta-data\r\n            android:name=\"com.facebook.sdk.ApplicationId\"\r\n            android:value=\"@string/facebook_app_id\" />\r\n\r\n        <activity\r\n            android:name=\"com.theartofdev.edmodo.cropper.CropImageActivity\"\r\n            android:theme=\"@style/Base.Theme.AppCompat\" />\r\n\r\n        <provider\r\n            android:name=\"androidx.core.content.FileProvider\"\r\n            android:authorities=\"com.example.goaltracker.fileprovider\"\r\n            android:exported=\"false\"\r\n            android:grantUriPermissions=\"true\">\r\n            <meta-data\r\n                android:name=\"android.support.FILE_PROVIDER_PATHS\"\r\n                android:resource=\"@xml/filepaths\" />\r\n        </provider>\r\n    </application>\r\n\r\n</manifest>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
---- a/app/src/main/AndroidManifest.xml	(revision 2af7d993c5337371f25190ce72e9812460d94e67)
-+++ b/app/src/main/AndroidManifest.xml	(date 1672977980607)
-@@ -19,7 +19,7 @@
-         android:supportsRtl="true"
-         android:theme="@style/Theme.GoalTracker">
-         <activity
--            android:name=".LoginActivity"
-+            android:name=".SplashActivity"
-             android:exported="false">
-         </activity>
-         <activity
-@@ -64,7 +64,7 @@
-             android:name=".ProfileActivity"
-             android:exported="true" />
-         <activity
--            android:name=".SplashActivity"
-+            android:name=".LoginActivity"
-             android:exported="true">
-             <intent-filter>
-                 <action android:name="android.intent.action.MAIN" />
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023-01-02__4_27__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-02__4_27__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-02__4_27__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-02__4_27__Changes_.xml	(revision 7bdfde0ce23f04515896a615659fbc49c89b7136)
+++ /dev/null	(revision 7bdfde0ce23f04515896a615659fbc49c89b7136)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2023-01-02_오후_4_27_[Changes]" date="1672644434472" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-02_오후_4_27_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2023-01-02 오후 4:27 [Changes]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/java/com/example/goaltracker/AddFriendActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.goaltracker\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.graphics.Color\r\nimport android.graphics.drawable.ColorDrawable\r\nimport android.os.Bundle\r\nimport android.text.Editable\r\nimport android.text.TextWatcher\r\nimport android.util.Log\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.view.Window\r\nimport android.widget.Button\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.google.firebase.auth.ktx.auth\r\nimport com.google.firebase.firestore.FieldValue\r\nimport com.google.firebase.firestore.FirebaseFirestore\r\nimport com.google.firebase.ktx.Firebase\r\nimport kotlinx.android.synthetic.main.activity_add_friend.searchWord\r\nimport kotlinx.android.synthetic.main.activity_add_friend.*\r\nimport kotlinx.android.synthetic.main.item_friend_add.*\r\nimport kotlinx.android.synthetic.main.report_dialog.*\r\nimport java.text.SimpleDateFormat\r\nimport java.util.*\r\nimport kotlin.collections.ArrayList\r\n\r\n\r\n\r\nclass AddFriendActivity : AppCompatActivity() {\r\n    //파이어스토어\r\n    var firestore: FirebaseFirestore? = null\r\n    private val currentUser = Firebase.auth.currentUser?.uid\r\n\r\n    var searchcount = 0  //사람 수\r\n    private lateinit var dialog: ReportDialog  //다이얼로그\r\n    lateinit var index: String\r\n    lateinit var msgindex: String\r\n    lateinit var blockindex: String\r\n    var indexname : String? = null\r\n    var indexemail : String? = null\r\n    var indexcolor : String? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        setTheme(MySharedPreferences.getTheme(this))\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_add_friend)\r\n\r\n\r\n\r\n\r\n        searchWord.addTextChangedListener(object : TextWatcher {\r\n\r\n            //텍스트가 변경되기 바로 이전에 동작\r\n            override fun beforeTextChanged(charSequence: CharSequence, i: Int, i1: Int, i2: Int) {}\r\n\r\n            //텍스트가 변경되는 동시에 동작\r\n            override fun onTextChanged(charSequence: CharSequence, i: Int, i1: Int, i2: Int) {}\r\n\r\n            // 텍스트가 변경된 이후에 동작\r\n            override fun afterTextChanged(editable: Editable) {\r\n                // input창에 문자를 입력할때마다 호출된다.\r\n                // search 메소드를 호출한다.\r\n                (FriendAddRecyclerView.adapter as RecyclerViewAdapter).search(searchWord.text.toString())\r\n            }\r\n        })\r\n\r\n        // 파이어스토어 인스턴스 초기화\r\n        firestore = FirebaseFirestore.getInstance()\r\n\r\n        FriendAddRecyclerView.adapter = RecyclerViewAdapter()\r\n        FriendAddRecyclerView.layoutManager = LinearLayoutManager(this)\r\n\r\n\r\n        //x버튼 누르면 main 화면으로 이동\r\n        backBtn.setOnClickListener {\r\n            startActivity(Intent(this, FriendActivity::class.java))\r\n        }\r\n\r\n\r\n        // 검색 옵션에 따라 검색\r\n        searchBtn.setOnClickListener {\r\n            (FriendAddRecyclerView.adapter as RecyclerViewAdapter).search(searchWord.text.toString())\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    //인원 카운트\r\n    fun getCount() {\r\n        var text_count = findViewById<TextView>(R.id.search_count)\r\n        text_count.text = \"\" + searchcount + \"명\"\r\n    }\r\n\r\n\r\n    inner class RecyclerViewAdapter : RecyclerView.Adapter<RecyclerView.ViewHolder>() {\r\n        // Friend 클래스 ArrayList 생성성\r\n        var friend_add: ArrayList<Friend> = arrayListOf()\r\n\r\n\r\n        init {  // Account의 문서를 불러온 뒤 Friend으로 변환해 ArrayList에 담음\r\n            firestore?.collection(\"Account\")\r\n                ?.addSnapshotListener { querySnapshot, firebaseFirestoreException ->\r\n                    // ArrayList 비워줌\r\n                    friend_add.clear()\r\n\r\n                    for (snapshot in querySnapshot!!.documents) {\r\n                        var item = snapshot.toObject(Friend::class.java)\r\n                        friend_add.add(item!!)\r\n                    }\r\n\r\n\r\n                    notifyDataSetChanged()\r\n                }\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n        // xml파일을 inflate하여 ViewHolder를 생성\r\n        override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): RecyclerView.ViewHolder {\r\n            var view =\r\n                LayoutInflater.from(parent.context).inflate(R.layout.item_friend_add, parent, false)\r\n            return ViewHolder(view)\r\n        }\r\n\r\n        // onCreateViewHolder에서 만든 view와 실제 데이터를 연결\r\n        override fun onBindViewHolder(holder: RecyclerView.ViewHolder, position: Int) {\r\n            var viewHolder = (holder as ViewHolder).itemView\r\n\r\n            holder.SetFriendAddName(friend_add[position])\r\n            holder.SetFriendUid(friend_add[position])\r\n            holder.SetProfileAddName(friend_add[position])\r\n            holder.AddFriendBtnOnclick(friend_add[position])\r\n            holder.SetFriendAddColor(friend_add[position])\r\n            holder.SetFriendAddEmail(friend_add[position])\r\n            holder.loadNoticeTime(friend_add[position])\r\n            var account = friend_add[position]\r\n\r\n            //아이템을 클릭하면 다이얼로그 생성\r\n            holder.itemView.setOnClickListener {\r\n                callDialog(it.context, account)\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        inner class ViewHolder(view: View) : RecyclerView.ViewHolder(view) {\r\n            val friendList: ArrayList<String> =\r\n                MySharedPreferences.getFriendList(this@AddFriendActivity)\r\n            fun loadNoticeTime(item: Friend) {\r\n                Log.d(item.uid.toString(), \"불러오기\")\r\n\r\n\r\n            }\r\n            private val AddName: TextView = itemView.findViewById(R.id.AddName)\r\n            private val Adduid: TextView = itemView.findViewById(R.id.Adduid)\r\n            private val ProfileName: TextView = itemView.findViewById(R.id.AddProfileName)\r\n            private val AddEmail: TextView = itemView.findViewById(R.id.AddEmail)\r\n            private val AddColor: ImageView = itemView.findViewById(R.id.AddColor)\r\n            private val AddBtn: Button = itemView.findViewById(R.id.AddBtn)\r\n\r\n            //친구 추가 이름\r\n            fun SetFriendAddName(item: Friend) {\r\n                AddName.text = item.userName\r\n            }\r\n\r\n            //친구 uid\r\n            fun SetFriendUid(item: Friend) {\r\n                Adduid.text = item.uid\r\n            }\r\n\r\n            //친구 프로필 이름\r\n            fun SetProfileAddName(item: Friend) {\r\n                ProfileName.text = item.userName?.get(0).toString()\r\n            }\r\n\r\n            //친구 추가 프로필\r\n            fun SetFriendAddColor(item: Friend) {\r\n                var circleResource = 0\r\n                when (item.userColor) {\r\n                    \"#f69b94\" -> circleResource = R.drawable.b_f69b94\r\n                    \"#f8c8c4\" -> circleResource = R.drawable.b_f8c8c4\r\n                    \"#fcdcce\" -> circleResource = R.drawable.b_fcdcce\r\n                    \"#96b0e5\" -> circleResource = R.drawable.b_96b0e5\r\n                    \"#92b9e2\" -> circleResource = R.drawable.b_92b9e2\r\n                    \"#ebc0c7\" -> circleResource = R.drawable.b_ebc0c7\r\n                    \"#7bb6c8\" -> circleResource = R.drawable.b_7bb6c8\r\n                    \"#aad3d7\" -> circleResource = R.drawable.b_aad3d7\r\n                    \"#f5f1f0\" -> circleResource = R.drawable.b_f5f1f0\r\n                    \"#d5e3e6\" -> circleResource = R.drawable.b_d5e3e6\r\n                    \"#f2a4b1\" -> circleResource = R.drawable.b_f2a4b1\r\n                    \"#7175a5\" -> circleResource = R.drawable.b_7175a5\r\n                    \"#a1b3d7\" -> circleResource = R.drawable.b_a1b3d7\r\n                    \"#bd83cf\" -> circleResource = R.drawable.b_bd83cf\r\n                    \"#e5afe9\" -> circleResource = R.drawable.b_e5afe9\r\n\r\n                }\r\n                AddColor.setImageResource(circleResource)\r\n            }\r\n\r\n            //친구 추가 이메일\r\n            fun SetFriendAddEmail(item: Friend) {\r\n                AddEmail.text = item.email\r\n            }\r\n\r\n            //친구 추가 버튼\r\n            @SuppressLint(\"SuspiciousIndentation\")\r\n            fun AddFriendBtnOnclick(item: Friend) {\r\n                if (friendList.contains(item.uid.toString())) {\r\n                    AddBtn.text = \"신청 보냄\"\r\n                    AddBtn.isEnabled = false\r\n                }\r\n\r\n\r\n                AddBtn.setOnClickListener {\r\n                    try {\r\n                        Log.d(item.uid, \"요청한 유저 아이디\")\r\n                        val nowTime = System.currentTimeMillis()\r\n                        val timeformatter = SimpleDateFormat(\"yyyy.MM.dd.hh.mm\")\r\n                        val dateTime = timeformatter.format(nowTime)\r\n                        if (item.uid != currentUser) {\r\n                            firestore?.collection(\"Account\")?.document(\"$currentUser\")?.get()\r\n                                ?.addOnSuccessListener { document ->\r\n                                    if (document != null) {\r\n                                        // 현재 사용자 이름이랑 이메일, 색상 받아오기\r\n                                        indexname = document.data?.get(\"userName\").toString()\r\n                                        indexemail = document.data?.get(\"email\").toString()\r\n                                        indexcolor = document.data?.get(\"userColor\").toString()\r\n                                    }\r\n\r\n                                    firestore?.collection(\"Account\")?.document(\"$currentUser\")\r\n                                        ?.collection(\"Friend\")\r\n                                        ?.whereEqualTo(\"uid\", item.uid.toString())?.get()\r\n                                        ?.addOnCompleteListener { task ->\r\n\r\n\r\n                                            // 친구 리스트가 없는 경우\r\n                                            if (task.result?.size() == 0) {\r\n                                                // 내 친구 목록\r\n                                                firestore?.collection(\"Account\")\r\n                                                    ?.document(\"$currentUser\")\r\n                                                    ?.collection(\"Friend\")\r\n                                                    ?.document(\"${item.uid}\")\r\n                                                    ?.set(\r\n                                                        hashMapOf(\r\n                                                            \"uid\" to item.uid,\r\n                                                            \"status\" to \"request\",\r\n                                                            \"userName\" to item.userName,\r\n                                                            \"email\" to item.email,\r\n                                                            \"userColor\" to item.userColor\r\n\r\n                                                        )\r\n                                                    )\r\n                                                    ?.addOnSuccessListener {\r\n                                                        Toast.makeText(\r\n                                                            this@AddFriendActivity,\r\n                                                            \"친구 신청을 보냈습니다.\",\r\n                                                            Toast.LENGTH_SHORT\r\n                                                        ).show()\r\n                                                        friendList.add(item.uid.toString())\r\n                                                        AddBtn.text = \"신청 보냄\"\r\n                                                        AddBtn.isEnabled = false\r\n                                                        Log.d(friendList.toString(), \"저장\")\r\n                                                    }\r\n                                                    ?.addOnFailureListener {}\r\n\r\n                                                // 상대방 친구 목록\r\n                                                firestore?.collection(\"Account\")\r\n                                                    ?.document(item.uid.toString())\r\n                                                    ?.collection(\"Friend\")\r\n                                                    ?.document(\"${currentUser}\")\r\n                                                    ?.set(\r\n                                                        hashMapOf(\r\n                                                            \"uid\" to currentUser,\r\n                                                            \"status\" to \"accept\",\r\n                                                            \"userName\" to indexname,\r\n                                                            \"email\" to indexemail,\r\n                                                            \"userColor\" to indexcolor\r\n\r\n                                                        )\r\n                                                    )\r\n                                                    ?.addOnSuccessListener {\r\n                                                    }\r\n                                                    ?.addOnFailureListener {\r\n                                                    }\r\n\r\n                                                //내 노티피케이션\r\n                                                firestore?.collection(\"Account\")\r\n                                                    ?.document(\"$currentUser\")\r\n                                                    ?.collection(\"Notification\")\r\n                                                    ?.document(\"${item.uid}\")\r\n                                                    ?.set(\r\n                                                        hashMapOf(\r\n                                                            \"requestUserId\" to item.uid,\r\n                                                            \"userName\" to item.userName,\r\n                                                            \"userColor\" to item.userColor,\r\n                                                            \"type\" to 1,\r\n                                                            \"read\" to false,\r\n                                                            \"timestamp\" to FieldValue.serverTimestamp()\r\n\r\n                                                        )\r\n                                                    )\r\n                                                    ?.addOnSuccessListener {}\r\n                                                    ?.addOnFailureListener {}\r\n\r\n                                                // 상대방 노티피케이션\r\n                                                firestore?.collection(\"Account\")\r\n                                                    ?.document(item.uid.toString())\r\n                                                    ?.collection(\"Notification\")\r\n                                                    ?.document(\"${currentUser}\")\r\n                                                    ?.set(\r\n                                                        hashMapOf(\r\n                                                            \"requestUserId\" to currentUser,\r\n                                                            \"userName\" to indexname,\r\n                                                            \"userColor\" to indexcolor,\r\n                                                            \"type\" to 1,\r\n                                                            \"read\" to false,\r\n                                                            \"timestamp\" to FieldValue.serverTimestamp()\r\n\r\n                                                        )\r\n                                                    )\r\n                                                    ?.addOnSuccessListener {\r\n                                                    }\r\n                                                    ?.addOnFailureListener {\r\n                                                    }\r\n\r\n                                            }\r\n\r\n                                            // 친구 리스트가 있는 경우\r\n                                            else {\r\n                                                var notFriend = true\r\n                                                // 이미 친구임\r\n                                                firestore?.collection(\"Account\")\r\n                                                    ?.document(\"$currentUser\")\r\n                                                    ?.collection(\"Friend\")\r\n                                                    ?.document(\"${item.uid}\")?.get()\r\n                                                    ?.addOnSuccessListener { document ->\r\n                                                        if (document != null) {\r\n                                                            Toast.makeText(\r\n                                                                this@AddFriendActivity,\r\n                                                                \"이미 친구입니다.\",\r\n                                                                Toast.LENGTH_SHORT\r\n                                                            ).show()\r\n                                                            notFriend = false\r\n\r\n                                                        }\r\n\r\n                                                        if (notFriend) {\r\n                                                            // 내 친구 목록\r\n                                                            firestore?.collection(\"Account\")\r\n                                                                ?.document(\"$currentUser\")\r\n                                                                ?.collection(\"Friend\")\r\n                                                                ?.document(\"${item.uid}\")\r\n                                                                ?.set(\r\n                                                                    hashMapOf(\r\n                                                                        \"uid\" to item.uid,\r\n                                                                        \"status\" to \"request\",\r\n                                                                        \"userName\" to item.userName,\r\n                                                                        \"email\" to item.email,\r\n                                                                        \"userColor\" to item.userColor\r\n\r\n                                                                    )\r\n                                                                )\r\n                                                                ?.addOnSuccessListener {\r\n                                                                    Toast.makeText(\r\n                                                                        this@AddFriendActivity,\r\n                                                                        \"친구 신청을 보냈습니다.\",\r\n                                                                        Toast.LENGTH_SHORT\r\n                                                                    ).show()\r\n                                                                    friendList.add(item.uid.toString())\r\n                                                                    AddBtn.text = \"신청 보냄\"\r\n                                                                    AddBtn.isEnabled = false\r\n                                                                    Log.d(friendList.toString(), \"저장\")\r\n\r\n                                                                }\r\n                                                                ?.addOnFailureListener {}\r\n\r\n                                                            // 상대방 친구 목록\r\n                                                            firestore?.collection(\"Account\")\r\n                                                                ?.document(item.uid.toString())\r\n                                                                ?.collection(\"Friend\")\r\n                                                                ?.document(\"${currentUser}\")\r\n                                                                ?.set(\r\n                                                                    hashMapOf(\r\n                                                                        \"uid\" to currentUser,\r\n                                                                        \"status\" to \"accept\",\r\n                                                                        \"userName\" to indexname,\r\n                                                                        \"email\" to indexemail,\r\n                                                                        \"userColor\" to indexcolor\r\n\r\n                                                                    )\r\n                                                                )\r\n                                                                ?.addOnSuccessListener {\r\n                                                                }\r\n                                                                ?.addOnFailureListener {\r\n                                                                }\r\n\r\n\r\n                                                            //내 노티피케이션\r\n                                                            firestore?.collection(\"Account\")\r\n                                                                ?.document(\"$currentUser\")\r\n                                                                ?.collection(\"Notification\")\r\n                                                                ?.document(\"${item.uid}\")\r\n                                                                ?.set(\r\n                                                                    hashMapOf(\r\n                                                                        \"requestUserId\" to item.uid,\r\n                                                                        \"userName\" to item.userName,\r\n                                                                        \"userColor\" to item.userColor,\r\n                                                                        \"type\" to 1,\r\n                                                                        \"read\" to false,\r\n                                                                        \"timestamp\" to FieldValue.serverTimestamp()\r\n\r\n                                                                    )\r\n                                                                )\r\n                                                                ?.addOnSuccessListener {}\r\n                                                                ?.addOnFailureListener {}\r\n\r\n                                                            // 상대방 노티피케이션\r\n                                                            firestore?.collection(\"Account\")\r\n                                                                ?.document(item.uid.toString())\r\n                                                                ?.collection(\"Notification\")\r\n                                                                ?.document(\"${currentUser}\")\r\n                                                                ?.set(\r\n                                                                    hashMapOf(\r\n                                                                        \"requestUserId\" to currentUser,\r\n                                                                        \"userName\" to indexname,\r\n                                                                        \"userColor\" to indexcolor,\r\n                                                                        \"type\" to 1,\r\n                                                                        \"read\" to false,\r\n                                                                        \"timestamp\" to FieldValue.serverTimestamp()\r\n\r\n                                                                    )\r\n                                                                )\r\n                                                                ?.addOnSuccessListener {\r\n                                                                }\r\n                                                                ?.addOnFailureListener {\r\n                                                                }\r\n\r\n\r\n                                                        }\r\n\r\n                                                    }\r\n\r\n                                            }\r\n                                        }\r\n                                }\r\n\r\n                        } else {\r\n                            Toast.makeText(\r\n                                this@AddFriendActivity,\r\n                                \"자기자신을 친구로 추가할 수 없습니다.\", Toast.LENGTH_SHORT\r\n                            ).show()\r\n                        }\r\n                    } catch (e: IllegalArgumentException) {\r\n                        Toast.makeText(\r\n                            this@AddFriendActivity,\r\n                            \"친구 신청에 실패했습니다.\", Toast.LENGTH_SHORT\r\n                        ).show()\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        // 리사이클러뷰의 아이템 총 개수 반환\r\n        override fun getItemCount(): Int {\r\n            return friend_add.size\r\n        }\r\n\r\n        //관리자(신고)Dialog\r\n        fun callDialog(context: Context, item: Friend) {\r\n\r\n            dialog = ReportDialog(\r\n                context = context,\r\n                userColor = item.userColor,\r\n                userName = item.userName,\r\n                uid = item.uid,\r\n                userMessage = item.userMessage,\r\n                email = item.email!!,\r\n                namebtnListener = reNameListener,\r\n                messagebtnListener = reMessageListener,\r\n                blockbtnListener = blockbtnListener\r\n            )\r\n\r\n            //다이얼로그 타이틀 및 테두리 없애기\r\n            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE)\r\n            dialog.window?.setBackgroundDrawable(ColorDrawable(Color.TRANSPARENT))\r\n            dialog.show()\r\n        }\r\n\r\n        //닉네임 신고 버튼 클릭 시\r\n        private val reNameListener = View.OnClickListener {\r\n            index = UUID.randomUUID().toString()\r\n            firestore?.collection(\"Manager\")?.document(\"$index\")\r\n                ?.set(\r\n                    hashMapOf(\r\n                        \"userName\" to dialog.userName,\r\n                        \"email\" to dialog.email,\r\n                        \"index\" to index,\r\n                        \"id\" to dialog.uid,\r\n                    )\r\n                )\r\n\r\n            Toast.makeText(\r\n                this@AddFriendActivity,\r\n                \"닉네임 신고가 되었습니다.\",\r\n                Toast.LENGTH_SHORT\r\n            ).show()\r\n        }\r\n\r\n\r\n        //상태 메세지 신고 버튼 클릭 시\r\n        private val reMessageListener = View.OnClickListener {\r\n            msgindex = UUID.randomUUID().toString()\r\n            firestore?.collection(\"Manager\")?.document(\"$msgindex\")\r\n                ?.set(\r\n                    hashMapOf(\r\n                        \"userMessage\" to dialog.userMessage,\r\n                        \"email\" to dialog.email,\r\n                        \"msgindex\" to msgindex,\r\n                        \"id\" to dialog.uid,\r\n                    )\r\n                )\r\n            Toast.makeText(\r\n                this@AddFriendActivity,\r\n                \"상태 메세지 신고가 되었습니다.\",\r\n                Toast.LENGTH_SHORT\r\n            ).show()\r\n        }\r\n\r\n\r\n        //차단 버튼 클릭 시\r\n        private val blockbtnListener = View.OnClickListener {\r\n            Toast.makeText(\r\n                this@AddFriendActivity,\r\n                \"차단 되었습니다.\",\r\n                Toast.LENGTH_SHORT\r\n            ).show()\r\n        }\r\n\r\n\r\n\r\n        // 파이어스토어에서 데이터를 불러와서 검색어가 있는지 판단\r\n        fun search(searchWord: String) {\r\n            firestore?.collection(\"Account\")\r\n                ?.addSnapshotListener { querySnapshot, firebaseFirestoreException ->\r\n                    // ArrayList 비워줌\r\n                    friend_add.clear()\r\n\r\n                    for (snapshot in querySnapshot!!.documents) {\r\n                        //에러처리(안 해주면 오류)\r\n                        if (snapshot.getString(\"email\") != null && snapshot.getString(\"userName\") != null)\r\n                            if (snapshot.getString(\"email\")!!\r\n                                    .contains(searchWord) || snapshot.getString(\"userName\")!!\r\n                                    .contains(searchWord)\r\n                            ) {\r\n                                val item = snapshot.toObject(Friend::class.java)\r\n                                friend_add.add(item!!)\r\n                            }\r\n                    }\r\n                    searchcount = friend_add.size\r\n                    getCount()\r\n                    notifyDataSetChanged()\r\n                }\r\n        }\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/goaltracker/AddFriendActivity.kt b/app/src/main/java/com/example/goaltracker/AddFriendActivity.kt
--- a/app/src/main/java/com/example/goaltracker/AddFriendActivity.kt	(revision 7bdfde0ce23f04515896a615659fbc49c89b7136)
+++ b/app/src/main/java/com/example/goaltracker/AddFriendActivity.kt	(date 1673298262491)
@@ -27,6 +27,7 @@
 import kotlinx.android.synthetic.main.activity_add_friend.searchWord
 import kotlinx.android.synthetic.main.activity_add_friend.*
 import kotlinx.android.synthetic.main.item_friend_add.*
+import kotlinx.android.synthetic.main.notice_layer.view.*
 import kotlinx.android.synthetic.main.report_dialog.*
 import java.text.SimpleDateFormat
 import java.util.*
@@ -43,11 +44,11 @@
     private lateinit var dialog: ReportDialog  //다이얼로그
     lateinit var index: String
     lateinit var msgindex: String
-    lateinit var blockindex: String
+
     var indexname : String? = null
     var indexemail : String? = null
     var indexcolor : String? = null
-
+    lateinit var friends: Account
     override fun onCreate(savedInstanceState: Bundle?) {
         setTheme(MySharedPreferences.getTheme(this))
         super.onCreate(savedInstanceState)
@@ -160,7 +161,13 @@
                 MySharedPreferences.getFriendList(this@AddFriendActivity)
             fun loadNoticeTime(item: Friend) {
                 Log.d(item.uid.toString(), "불러오기")
-
+                if (friendList.contains(item.uid)) {
+                    AddBtn.text = "신청 보냄"
+                    AddBtn.isEnabled = false
+                }
+                if (!friendList.contains(item.uid.toString())) {
+                    AddBtn.text = "친구 요청"
+                }
 
             }
             private val AddName: TextView = itemView.findViewById(R.id.AddName)
@@ -217,259 +224,255 @@
             //친구 추가 버튼
             @SuppressLint("SuspiciousIndentation")
             fun AddFriendBtnOnclick(item: Friend) {
-                if (friendList.contains(item.uid.toString())) {
-                    AddBtn.text = "신청 보냄"
-                    AddBtn.isEnabled = false
-                }
-
-
-                AddBtn.setOnClickListener {
-                    try {
-                        Log.d(item.uid, "요청한 유저 아이디")
-                        val nowTime = System.currentTimeMillis()
-                        val timeformatter = SimpleDateFormat("yyyy.MM.dd.hh.mm")
-                        val dateTime = timeformatter.format(nowTime)
-                        if (item.uid != currentUser) {
-                            firestore?.collection("Account")?.document("$currentUser")?.get()
-                                ?.addOnSuccessListener { document ->
-                                    if (document != null) {
-                                        // 현재 사용자 이름이랑 이메일, 색상 받아오기
-                                        indexname = document.data?.get("userName").toString()
-                                        indexemail = document.data?.get("email").toString()
-                                        indexcolor = document.data?.get("userColor").toString()
-                                    }
+                   AddBtn.setOnClickListener {
+                        try {
+                            Log.d(item.uid, "요청한 유저 아이디")
+                            val nowTime = System.currentTimeMillis()
+                            val timeformatter = SimpleDateFormat("yyyy.MM.dd.hh.mm")
+                            val dateTime = timeformatter.format(nowTime)
+                            if (item.uid != currentUser) {
+                                firestore?.collection("Account")?.document("$currentUser")?.get()
+                                    ?.addOnSuccessListener { document ->
+                                        if (document != null) {
+                                            // 현재 사용자 이름이랑 이메일, 색상 받아오기
+                                            indexname = document.data?.get("userName").toString()
+                                            indexemail = document.data?.get("email").toString()
+                                            indexcolor = document.data?.get("userColor").toString()
+                                        }
 
-                                    firestore?.collection("Account")?.document("$currentUser")
-                                        ?.collection("Friend")
-                                        ?.whereEqualTo("uid", item.uid.toString())?.get()
-                                        ?.addOnCompleteListener { task ->
+                                        firestore?.collection("Account")?.document("$currentUser")
+                                            ?.collection("Friend")
+                                            ?.whereEqualTo("uid", item.uid.toString())?.get()
+                                            ?.addOnCompleteListener { task ->
 
 
-                                            // 친구 리스트가 없는 경우
-                                            if (task.result?.size() == 0) {
-                                                // 내 친구 목록
-                                                firestore?.collection("Account")
-                                                    ?.document("$currentUser")
-                                                    ?.collection("Friend")
-                                                    ?.document("${item.uid}")
-                                                    ?.set(
-                                                        hashMapOf(
-                                                            "uid" to item.uid,
-                                                            "status" to "request",
-                                                            "userName" to item.userName,
-                                                            "email" to item.email,
-                                                            "userColor" to item.userColor
+                                                // 친구 리스트가 없는 경우
+                                                if (task.result?.size() == 0) {
+                                                    // 내 친구 목록
+                                                    firestore?.collection("Account")
+                                                        ?.document("$currentUser")
+                                                        ?.collection("Friend")
+                                                        ?.document("${item.uid}")
+                                                        ?.set(
+                                                            hashMapOf(
+                                                                "uid" to item.uid,
+                                                                "status" to "request",
+                                                                "userName" to item.userName,
+                                                                "email" to item.email,
+                                                                "userColor" to item.userColor
 
-                                                        )
-                                                    )
-                                                    ?.addOnSuccessListener {
-                                                        Toast.makeText(
-                                                            this@AddFriendActivity,
-                                                            "친구 신청을 보냈습니다.",
-                                                            Toast.LENGTH_SHORT
-                                                        ).show()
-                                                        friendList.add(item.uid.toString())
-                                                        AddBtn.text = "신청 보냄"
-                                                        AddBtn.isEnabled = false
-                                                        Log.d(friendList.toString(), "저장")
-                                                    }
-                                                    ?.addOnFailureListener {}
+                                                            )
+                                                        )
+                                                        ?.addOnSuccessListener {
+                                                            Toast.makeText(
+                                                                this@AddFriendActivity,
+                                                                "친구 신청을 보냈습니다.",
+                                                                Toast.LENGTH_SHORT
+                                                            ).show()
+                                                            friendList.add(item.uid.toString())
+                                                            AddBtn.text = "신청 보냄"
+                                                            AddBtn.isEnabled = false
+                                                            Log.d(friendList.toString(), "저장")
+                                                        }
+                                                        ?.addOnFailureListener {}
 
-                                                // 상대방 친구 목록
-                                                firestore?.collection("Account")
-                                                    ?.document(item.uid.toString())
-                                                    ?.collection("Friend")
-                                                    ?.document("${currentUser}")
-                                                    ?.set(
-                                                        hashMapOf(
-                                                            "uid" to currentUser,
-                                                            "status" to "accept",
-                                                            "userName" to indexname,
-                                                            "email" to indexemail,
-                                                            "userColor" to indexcolor
+                                                    // 상대방 친구 목록
+                                                    firestore?.collection("Account")
+                                                        ?.document(item.uid.toString())
+                                                        ?.collection("Friend")
+                                                        ?.document("${currentUser}")
+                                                        ?.set(
+                                                            hashMapOf(
+                                                                "uid" to currentUser,
+                                                                "status" to "accept",
+                                                                "userName" to indexname,
+                                                                "email" to indexemail,
+                                                                "userColor" to indexcolor
 
-                                                        )
-                                                    )
-                                                    ?.addOnSuccessListener {
-                                                    }
-                                                    ?.addOnFailureListener {
-                                                    }
+                                                            )
+                                                        )
+                                                        ?.addOnSuccessListener {
+                                                        }
+                                                        ?.addOnFailureListener {
+                                                        }
 
-                                                //내 노티피케이션
-                                                firestore?.collection("Account")
-                                                    ?.document("$currentUser")
-                                                    ?.collection("Notification")
-                                                    ?.document("${item.uid}")
-                                                    ?.set(
-                                                        hashMapOf(
-                                                            "requestUserId" to item.uid,
-                                                            "userName" to item.userName,
-                                                            "userColor" to item.userColor,
-                                                            "type" to 1,
-                                                            "read" to false,
-                                                            "timestamp" to FieldValue.serverTimestamp()
+                                                    //내 노티피케이션
+                                                    firestore?.collection("Account")
+                                                        ?.document("$currentUser")
+                                                        ?.collection("Notification")
+                                                        ?.document("${item.uid}")
+                                                        ?.set(
+                                                            hashMapOf(
+                                                                "requestUserId" to item.uid,
+                                                                "userName" to item.userName,
+                                                                "userColor" to item.userColor,
+                                                                "type" to 1,
+                                                                "read" to false,
+                                                                "timestamp" to FieldValue.serverTimestamp()
 
-                                                        )
-                                                    )
-                                                    ?.addOnSuccessListener {}
-                                                    ?.addOnFailureListener {}
+                                                            )
+                                                        )
+                                                        ?.addOnSuccessListener {}
+                                                        ?.addOnFailureListener {}
 
-                                                // 상대방 노티피케이션
-                                                firestore?.collection("Account")
-                                                    ?.document(item.uid.toString())
-                                                    ?.collection("Notification")
-                                                    ?.document("${currentUser}")
-                                                    ?.set(
-                                                        hashMapOf(
-                                                            "requestUserId" to currentUser,
-                                                            "userName" to indexname,
-                                                            "userColor" to indexcolor,
-                                                            "type" to 1,
-                                                            "read" to false,
-                                                            "timestamp" to FieldValue.serverTimestamp()
+                                                    // 상대방 노티피케이션
+                                                    firestore?.collection("Account")
+                                                        ?.document(item.uid.toString())
+                                                        ?.collection("Notification")
+                                                        ?.document("${currentUser}")
+                                                        ?.set(
+                                                            hashMapOf(
+                                                                "requestUserId" to currentUser,
+                                                                "userName" to indexname,
+                                                                "userColor" to indexcolor,
+                                                                "type" to 1,
+                                                                "read" to false,
+                                                                "timestamp" to FieldValue.serverTimestamp()
 
-                                                        )
-                                                    )
-                                                    ?.addOnSuccessListener {
-                                                    }
-                                                    ?.addOnFailureListener {
-                                                    }
+                                                            )
+                                                        )
+                                                        ?.addOnSuccessListener {
+                                                        }
+                                                        ?.addOnFailureListener {
+                                                        }
 
-                                            }
+                                                }
 
-                                            // 친구 리스트가 있는 경우
-                                            else {
-                                                var notFriend = true
-                                                // 이미 친구임
-                                                firestore?.collection("Account")
-                                                    ?.document("$currentUser")
-                                                    ?.collection("Friend")
-                                                    ?.document("${item.uid}")?.get()
-                                                    ?.addOnSuccessListener { document ->
-                                                        if (document != null) {
-                                                            Toast.makeText(
-                                                                this@AddFriendActivity,
-                                                                "이미 친구입니다.",
-                                                                Toast.LENGTH_SHORT
-                                                            ).show()
-                                                            notFriend = false
+                                                // 친구 리스트가 있는 경우
+                                                else {
+                                                    var notFriend = true
+                                                    // 이미 친구임
+                                                    firestore?.collection("Account")
+                                                        ?.document("$currentUser")
+                                                        ?.collection("Friend")
+                                                        ?.document("${item.uid}")?.get()
+                                                        ?.addOnSuccessListener { document ->
+                                                            if (document != null) {
+                                                                Toast.makeText(
+                                                                    this@AddFriendActivity,
+                                                                    "이미 친구입니다.",
+                                                                    Toast.LENGTH_SHORT
+                                                                ).show()
+                                                                notFriend = false
 
-                                                        }
+                                                            }
 
-                                                        if (notFriend) {
-                                                            // 내 친구 목록
-                                                            firestore?.collection("Account")
-                                                                ?.document("$currentUser")
-                                                                ?.collection("Friend")
-                                                                ?.document("${item.uid}")
-                                                                ?.set(
-                                                                    hashMapOf(
-                                                                        "uid" to item.uid,
-                                                                        "status" to "request",
-                                                                        "userName" to item.userName,
-                                                                        "email" to item.email,
-                                                                        "userColor" to item.userColor
+                                                            if (notFriend) {
+                                                                // 내 친구 목록
+                                                                firestore?.collection("Account")
+                                                                    ?.document("$currentUser")
+                                                                    ?.collection("Friend")
+                                                                    ?.document("${item.uid}")
+                                                                    ?.set(
+                                                                        hashMapOf(
+                                                                            "uid" to item.uid,
+                                                                            "status" to "request",
+                                                                            "userName" to item.userName,
+                                                                            "email" to item.email,
+                                                                            "userColor" to item.userColor
 
-                                                                    )
-                                                                )
-                                                                ?.addOnSuccessListener {
-                                                                    Toast.makeText(
-                                                                        this@AddFriendActivity,
-                                                                        "친구 신청을 보냈습니다.",
-                                                                        Toast.LENGTH_SHORT
-                                                                    ).show()
-                                                                    friendList.add(item.uid.toString())
-                                                                    AddBtn.text = "신청 보냄"
-                                                                    AddBtn.isEnabled = false
-                                                                    Log.d(friendList.toString(), "저장")
+                                                                        )
+                                                                    )
+                                                                    ?.addOnSuccessListener {
+                                                                        Toast.makeText(
+                                                                            this@AddFriendActivity,
+                                                                            "친구 신청을 보냈습니다.",
+                                                                            Toast.LENGTH_SHORT
+                                                                        ).show()
+                                                                        friendList.add(item.uid.toString())
+                                                                        AddBtn.text = "신청 보냄"
+                                                                        AddBtn.isEnabled = false
+                                                                        Log.d(
+                                                                            friendList.toString(),
+                                                                            "저장"
+                                                                        )
 
-                                                                }
-                                                                ?.addOnFailureListener {}
+                                                                    }
+                                                                    ?.addOnFailureListener {}
 
-                                                            // 상대방 친구 목록
-                                                            firestore?.collection("Account")
-                                                                ?.document(item.uid.toString())
-                                                                ?.collection("Friend")
-                                                                ?.document("${currentUser}")
-                                                                ?.set(
-                                                                    hashMapOf(
-                                                                        "uid" to currentUser,
-                                                                        "status" to "accept",
-                                                                        "userName" to indexname,
-                                                                        "email" to indexemail,
-                                                                        "userColor" to indexcolor
+                                                                // 상대방 친구 목록
+                                                                firestore?.collection("Account")
+                                                                    ?.document(item.uid.toString())
+                                                                    ?.collection("Friend")
+                                                                    ?.document("${currentUser}")
+                                                                    ?.set(
+                                                                        hashMapOf(
+                                                                            "uid" to currentUser,
+                                                                            "status" to "accept",
+                                                                            "userName" to indexname,
+                                                                            "email" to indexemail,
+                                                                            "userColor" to indexcolor
 
-                                                                    )
-                                                                )
-                                                                ?.addOnSuccessListener {
-                                                                }
-                                                                ?.addOnFailureListener {
-                                                                }
+                                                                        )
+                                                                    )
+                                                                    ?.addOnSuccessListener {
+                                                                    }
+                                                                    ?.addOnFailureListener {
+                                                                    }
 
 
-                                                            //내 노티피케이션
-                                                            firestore?.collection("Account")
-                                                                ?.document("$currentUser")
-                                                                ?.collection("Notification")
-                                                                ?.document("${item.uid}")
-                                                                ?.set(
-                                                                    hashMapOf(
-                                                                        "requestUserId" to item.uid,
-                                                                        "userName" to item.userName,
-                                                                        "userColor" to item.userColor,
-                                                                        "type" to 1,
-                                                                        "read" to false,
-                                                                        "timestamp" to FieldValue.serverTimestamp()
+                                                                //내 노티피케이션
+                                                                firestore?.collection("Account")
+                                                                    ?.document("$currentUser")
+                                                                    ?.collection("Notification")
+                                                                    ?.document("${item.uid}")
+                                                                    ?.set(
+                                                                        hashMapOf(
+                                                                            "requestUserId" to item.uid,
+                                                                            "userName" to item.userName,
+                                                                            "userColor" to item.userColor,
+                                                                            "type" to 1,
+                                                                            "read" to false,
+                                                                            "timestamp" to FieldValue.serverTimestamp()
 
-                                                                    )
-                                                                )
-                                                                ?.addOnSuccessListener {}
-                                                                ?.addOnFailureListener {}
+                                                                        )
+                                                                    )
+                                                                    ?.addOnSuccessListener {}
+                                                                    ?.addOnFailureListener {}
 
-                                                            // 상대방 노티피케이션
-                                                            firestore?.collection("Account")
-                                                                ?.document(item.uid.toString())
-                                                                ?.collection("Notification")
-                                                                ?.document("${currentUser}")
-                                                                ?.set(
-                                                                    hashMapOf(
-                                                                        "requestUserId" to currentUser,
-                                                                        "userName" to indexname,
-                                                                        "userColor" to indexcolor,
-                                                                        "type" to 1,
-                                                                        "read" to false,
-                                                                        "timestamp" to FieldValue.serverTimestamp()
+                                                                // 상대방 노티피케이션
+                                                                firestore?.collection("Account")
+                                                                    ?.document(item.uid.toString())
+                                                                    ?.collection("Notification")
+                                                                    ?.document("${currentUser}")
+                                                                    ?.set(
+                                                                        hashMapOf(
+                                                                            "requestUserId" to currentUser,
+                                                                            "userName" to indexname,
+                                                                            "userColor" to indexcolor,
+                                                                            "type" to 1,
+                                                                            "read" to false,
+                                                                            "timestamp" to FieldValue.serverTimestamp()
 
-                                                                    )
-                                                                )
-                                                                ?.addOnSuccessListener {
-                                                                }
-                                                                ?.addOnFailureListener {
-                                                                }
+                                                                        )
+                                                                    )
+                                                                    ?.addOnSuccessListener {
+                                                                    }
+                                                                    ?.addOnFailureListener {
+                                                                    }
 
 
-                                                        }
+                                                            }
 
-                                                    }
+                                                        }
 
-                                            }
-                                        }
-                                }
+                                                }
+                                            }
+                                    }
 
-                        } else {
-                            Toast.makeText(
-                                this@AddFriendActivity,
-                                "자기자신을 친구로 추가할 수 없습니다.", Toast.LENGTH_SHORT
-                            ).show()
-                        }
-                    } catch (e: IllegalArgumentException) {
-                        Toast.makeText(
-                            this@AddFriendActivity,
-                            "친구 신청에 실패했습니다.", Toast.LENGTH_SHORT
-                        ).show()
-                    }
-                }
-
+                            } else {
+                                Toast.makeText(
+                                    this@AddFriendActivity,
+                                    "자기자신을 친구로 추가할 수 없습니다.", Toast.LENGTH_SHORT
+                                ).show()
+                            }
+                        } catch (e: IllegalArgumentException) {
+                            Toast.makeText(
+                                this@AddFriendActivity,
+                                "친구 신청에 실패했습니다.", Toast.LENGTH_SHORT
+                            ).show()
+                        }
+                    }
             }
         }
 
